
<!-- saved from url=(0052)https://utan.io/lessons/lets-make-an-rss-reader.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><style type="text/css">@import url('https://themes.googleusercontent.com/fonts/css?kit=chteh0fSOiSrmusp8u43YAdDjahd2IAEL5IFmyNQJ7o');ul.lst-kix_xa4117mzq1wh-7{list-style-type:none}ul.lst-kix_xa4117mzq1wh-8{list-style-type:none}.lst-kix_r314j3pzqyej-6>li{counter-increment:lst-ctn-kix_r314j3pzqyej-6}.lst-kix_r5obo16pindt-1>li:before{content:"" counter(lst-ctn-kix_r5obo16pindt-1,lower-latin) ". "}ol.lst-kix_ejkdfe3ymms9-0.start{counter-reset:lst-ctn-kix_ejkdfe3ymms9-0 0}.lst-kix_r5obo16pindt-2>li:before{content:"" counter(lst-ctn-kix_r5obo16pindt-2,lower-roman) ". "}ol.lst-kix_ep5hptutcb4a-4.start{counter-reset:lst-ctn-kix_ep5hptutcb4a-4 0}.lst-kix_r5obo16pindt-0>li:before{content:"" counter(lst-ctn-kix_r5obo16pindt-0,decimal) ". "}.lst-kix_ep5hptutcb4a-1>li{counter-increment:lst-ctn-kix_ep5hptutcb4a-1}ol.lst-kix_r5obo16pindt-0.start{counter-reset:lst-ctn-kix_r5obo16pindt-0 0}ul.lst-kix_33xphoc5k4bj-8{list-style-type:none}ul.lst-kix_33xphoc5k4bj-7{list-style-type:none}ul.lst-kix_33xphoc5k4bj-6{list-style-type:none}ul.lst-kix_xa4117mzq1wh-0{list-style-type:none}ul.lst-kix_33xphoc5k4bj-5{list-style-type:none}ul.lst-kix_xa4117mzq1wh-1{list-style-type:none}ul.lst-kix_33xphoc5k4bj-4{list-style-type:none}ul.lst-kix_xa4117mzq1wh-2{list-style-type:none}ul.lst-kix_33xphoc5k4bj-3{list-style-type:none}ul.lst-kix_xa4117mzq1wh-3{list-style-type:none}ul.lst-kix_33xphoc5k4bj-2{list-style-type:none}ul.lst-kix_xa4117mzq1wh-4{list-style-type:none}ul.lst-kix_33xphoc5k4bj-1{list-style-type:none}ul.lst-kix_xa4117mzq1wh-5{list-style-type:none}ul.lst-kix_33xphoc5k4bj-0{list-style-type:none}ul.lst-kix_xa4117mzq1wh-6{list-style-type:none}.lst-kix_ejkdfe3ymms9-0>li{counter-increment:lst-ctn-kix_ejkdfe3ymms9-0}.lst-kix_pzbcxock989b-3>li{counter-increment:lst-ctn-kix_pzbcxock989b-3}ol.lst-kix_imugtofty16d-6.start{counter-reset:lst-ctn-kix_imugtofty16d-6 0}.lst-kix_r5obo16pindt-8>li:before{content:"" counter(lst-ctn-kix_r5obo16pindt-8,lower-roman) ". "}.lst-kix_r5obo16pindt-7>li:before{content:"" counter(lst-ctn-kix_r5obo16pindt-7,lower-latin) ". "}ol.lst-kix_sp0v8pxmx32z-2.start{counter-reset:lst-ctn-kix_sp0v8pxmx32z-2 0}.lst-kix_r5obo16pindt-5>li:before{content:"" counter(lst-ctn-kix_r5obo16pindt-5,lower-roman) ". "}.lst-kix_nzp5s8piyroe-6>li{counter-increment:lst-ctn-kix_nzp5s8piyroe-6}.lst-kix_r5obo16pindt-6>li:before{content:"" counter(lst-ctn-kix_r5obo16pindt-6,decimal) ". "}.lst-kix_r5obo16pindt-3>li:before{content:"" counter(lst-ctn-kix_r5obo16pindt-3,decimal) ". "}ol.lst-kix_pzbcxock989b-0.start{counter-reset:lst-ctn-kix_pzbcxock989b-0 0}.lst-kix_f4xzyjv75x54-2>li{counter-increment:lst-ctn-kix_f4xzyjv75x54-2}.lst-kix_r5obo16pindt-4>li:before{content:"" counter(lst-ctn-kix_r5obo16pindt-4,lower-latin) ". "}.lst-kix_pzbcxock989b-7>li{counter-increment:lst-ctn-kix_pzbcxock989b-7}.lst-kix_r5obo16pindt-7>li{counter-increment:lst-ctn-kix_r5obo16pindt-7}ol.lst-kix_r314j3pzqyej-4.start{counter-reset:lst-ctn-kix_r314j3pzqyej-4 0}.lst-kix_r5obo16pindt-0>li{counter-increment:lst-ctn-kix_r5obo16pindt-0}ol.lst-kix_imugtofty16d-1.start{counter-reset:lst-ctn-kix_imugtofty16d-1 0}.lst-kix_r314j3pzqyej-2>li{counter-increment:lst-ctn-kix_r314j3pzqyej-2}ol.lst-kix_nzp5s8piyroe-5.start{counter-reset:lst-ctn-kix_nzp5s8piyroe-5 0}ol.lst-kix_f4xzyjv75x54-5.start{counter-reset:lst-ctn-kix_f4xzyjv75x54-5 0}.lst-kix_r314j3pzqyej-8>li:before{content:"" counter(lst-ctn-kix_r314j3pzqyej-8,lower-roman) ". "}.lst-kix_r314j3pzqyej-5>li:before{content:"" counter(lst-ctn-kix_r314j3pzqyej-5,lower-roman) ". "}.lst-kix_r314j3pzqyej-6>li:before{content:"" counter(lst-ctn-kix_r314j3pzqyej-6,decimal) ". "}ol.lst-kix_r5obo16pindt-7.start{counter-reset:lst-ctn-kix_r5obo16pindt-7 0}.lst-kix_r314j3pzqyej-7>li:before{content:"" counter(lst-ctn-kix_r314j3pzqyej-7,lower-latin) ". "}.lst-kix_r314j3pzqyej-2>li:before{content:"" counter(lst-ctn-kix_r314j3pzqyej-2,lower-roman) ". "}.lst-kix_r314j3pzqyej-0>li:before{content:"" counter(lst-ctn-kix_r314j3pzqyej-0,decimal) ". "}.lst-kix_r314j3pzqyej-4>li:before{content:"" counter(lst-ctn-kix_r314j3pzqyej-4,lower-latin) ". "}.lst-kix_r5obo16pindt-4>li{counter-increment:lst-ctn-kix_r5obo16pindt-4}.lst-kix_ejkdfe3ymms9-7>li{counter-increment:lst-ctn-kix_ejkdfe3ymms9-7}.lst-kix_eacvnmgkbyni-2>li{counter-increment:lst-ctn-kix_eacvnmgkbyni-2}.lst-kix_pzbcxock989b-1>li:before{content:"" counter(lst-ctn-kix_pzbcxock989b-1,lower-latin) ". "}.lst-kix_pzbcxock989b-3>li:before{content:"" counter(lst-ctn-kix_pzbcxock989b-3,decimal) ". "}.lst-kix_pzbcxock989b-7>li:before{content:"" counter(lst-ctn-kix_pzbcxock989b-7,lower-latin) ". "}ol.lst-kix_imugtofty16d-8.start{counter-reset:lst-ctn-kix_imugtofty16d-8 0}.lst-kix_pzbcxock989b-5>li:before{content:"" counter(lst-ctn-kix_pzbcxock989b-5,lower-roman) ". "}.lst-kix_pzbcxock989b-0>li{counter-increment:lst-ctn-kix_pzbcxock989b-0}ol.lst-kix_eacvnmgkbyni-4.start{counter-reset:lst-ctn-kix_eacvnmgkbyni-4 0}.lst-kix_eacvnmgkbyni-8>li:before{content:"" counter(lst-ctn-kix_eacvnmgkbyni-8,lower-roman) ". "}.lst-kix_eacvnmgkbyni-6>li:before{content:"" counter(lst-ctn-kix_eacvnmgkbyni-6,decimal) ". "}.lst-kix_ejkdfe3ymms9-8>li{counter-increment:lst-ctn-kix_ejkdfe3ymms9-8}.lst-kix_hono0qt6d0bg-2>li:before{content:"\01f4c2  "}.lst-kix_f4xzyjv75x54-5>li{counter-increment:lst-ctn-kix_f4xzyjv75x54-5}.lst-kix_hono0qt6d0bg-0>li:before{content:"\01f4c2  "}.lst-kix_eacvnmgkbyni-4>li:before{content:"" counter(lst-ctn-kix_eacvnmgkbyni-4,lower-latin) ". "}ol.lst-kix_r314j3pzqyej-6.start{counter-reset:lst-ctn-kix_r314j3pzqyej-6 0}.lst-kix_ep5hptutcb4a-5>li{counter-increment:lst-ctn-kix_ep5hptutcb4a-5}.lst-kix_f4xzyjv75x54-2>li:before{content:"" counter(lst-ctn-kix_f4xzyjv75x54-2,lower-roman) ". "}.lst-kix_ep5hptutcb4a-4>li{counter-increment:lst-ctn-kix_ep5hptutcb4a-4}.lst-kix_f4xzyjv75x54-0>li:before{content:"" counter(lst-ctn-kix_f4xzyjv75x54-0,decimal) ". "}.lst-kix_sp0v8pxmx32z-2>li{counter-increment:lst-ctn-kix_sp0v8pxmx32z-2}ol.lst-kix_ep5hptutcb4a-7.start{counter-reset:lst-ctn-kix_ep5hptutcb4a-7 0}ol.lst-kix_sp0v8pxmx32z-7.start{counter-reset:lst-ctn-kix_sp0v8pxmx32z-7 0}ol.lst-kix_f4xzyjv75x54-8.start{counter-reset:lst-ctn-kix_f4xzyjv75x54-8 0}.lst-kix_nzp5s8piyroe-2>li{counter-increment:lst-ctn-kix_nzp5s8piyroe-2}.lst-kix_f4xzyjv75x54-8>li:before{content:"" counter(lst-ctn-kix_f4xzyjv75x54-8,lower-roman) ". "}.lst-kix_f4xzyjv75x54-6>li{counter-increment:lst-ctn-kix_f4xzyjv75x54-6}.lst-kix_f4xzyjv75x54-6>li:before{content:"" counter(lst-ctn-kix_f4xzyjv75x54-6,decimal) ". "}.lst-kix_imugtofty16d-2>li{counter-increment:lst-ctn-kix_imugtofty16d-2}.lst-kix_f4xzyjv75x54-4>li:before{content:"" counter(lst-ctn-kix_f4xzyjv75x54-4,lower-latin) ". "}ol.lst-kix_eacvnmgkbyni-2.start{counter-reset:lst-ctn-kix_eacvnmgkbyni-2 0}ol.lst-kix_nzp5s8piyroe-8.start{counter-reset:lst-ctn-kix_nzp5s8piyroe-8 0}.lst-kix_imugtofty16d-8>li{counter-increment:lst-ctn-kix_imugtofty16d-8}ol.lst-kix_eacvnmgkbyni-6.start{counter-reset:lst-ctn-kix_eacvnmgkbyni-6 0}ol.lst-kix_nzp5s8piyroe-7.start{counter-reset:lst-ctn-kix_nzp5s8piyroe-7 0}.lst-kix_xa4117mzq1wh-8>li:before{content:"\0025a0  "}.lst-kix_33xphoc5k4bj-5>li:before{content:"\00274f  "}ol.lst-kix_sp0v8pxmx32z-5.start{counter-reset:lst-ctn-kix_sp0v8pxmx32z-5 0}.lst-kix_xa4117mzq1wh-5>li:before{content:"\0025a0  "}.lst-kix_pzbcxock989b-6>li{counter-increment:lst-ctn-kix_pzbcxock989b-6}.lst-kix_nzp5s8piyroe-2>li:before{content:"" counter(lst-ctn-kix_nzp5s8piyroe-2,lower-roman) ". "}.lst-kix_33xphoc5k4bj-6>li:before{content:"\00274f  "}.lst-kix_r4dm149pe9b-8>li:before{content:"\0025a0  "}.lst-kix_xa4117mzq1wh-4>li:before{content:"\0025cb  "}.lst-kix_r4dm149pe9b-5>li:before{content:"\0025a0  "}.lst-kix_nzp5s8piyroe-1>li:before{content:"" counter(lst-ctn-kix_nzp5s8piyroe-1,lower-latin) ". "}.lst-kix_33xphoc5k4bj-1>li:before{content:"\01f4c1  "}ol.lst-kix_pzbcxock989b-3.start{counter-reset:lst-ctn-kix_pzbcxock989b-3 0}.lst-kix_imugtofty16d-6>li{counter-increment:lst-ctn-kix_imugtofty16d-6}.lst-kix_sp0v8pxmx32z-1>li{counter-increment:lst-ctn-kix_sp0v8pxmx32z-1}.lst-kix_xa4117mzq1wh-0>li:before{content:"\0025cf  "}.lst-kix_r5obo16pindt-1>li{counter-increment:lst-ctn-kix_r5obo16pindt-1}.lst-kix_xa4117mzq1wh-1>li:before{content:"\0025cb  "}.lst-kix_33xphoc5k4bj-2>li:before{content:"\01f4c2  "}ol.lst-kix_ep5hptutcb4a-6.start{counter-reset:lst-ctn-kix_ep5hptutcb4a-6 0}.lst-kix_r4dm149pe9b-4>li:before{content:"\0025cb  "}.lst-kix_nzp5s8piyroe-1>li{counter-increment:lst-ctn-kix_nzp5s8piyroe-1}.lst-kix_eacvnmgkbyni-2>li:before{content:"" counter(lst-ctn-kix_eacvnmgkbyni-2,lower-roman) ". "}ol.lst-kix_eacvnmgkbyni-5.start{counter-reset:lst-ctn-kix_eacvnmgkbyni-5 0}.lst-kix_r4dm149pe9b-1>li:before{content:"\0025cb  "}.lst-kix_eacvnmgkbyni-1>li:before{content:"" counter(lst-ctn-kix_eacvnmgkbyni-1,lower-latin) ". "}.lst-kix_hono0qt6d0bg-3>li:before{content:"\01f4c1  "}.lst-kix_r4dm149pe9b-0>li:before{content:"\0025cf  "}ol.lst-kix_pzbcxock989b-2.start{counter-reset:lst-ctn-kix_pzbcxock989b-2 0}.lst-kix_nzp5s8piyroe-5>li:before{content:"" counter(lst-ctn-kix_nzp5s8piyroe-5,lower-roman) ". "}.lst-kix_hono0qt6d0bg-6>li:before{content:"\00274f  "}.lst-kix_imugtofty16d-1>li{counter-increment:lst-ctn-kix_imugtofty16d-1}.lst-kix_ejkdfe3ymms9-3>li{counter-increment:lst-ctn-kix_ejkdfe3ymms9-3}.lst-kix_nzp5s8piyroe-6>li:before{content:"" counter(lst-ctn-kix_nzp5s8piyroe-6,decimal) ". "}.lst-kix_hono0qt6d0bg-7>li:before{content:"\00274f  "}.lst-kix_r5obo16pindt-6>li{counter-increment:lst-ctn-kix_r5obo16pindt-6}.lst-kix_ep5hptutcb4a-6>li{counter-increment:lst-ctn-kix_ep5hptutcb4a-6}.lst-kix_r314j3pzqyej-5>li{counter-increment:lst-ctn-kix_r314j3pzqyej-5}ol.lst-kix_pzbcxock989b-8.start{counter-reset:lst-ctn-kix_pzbcxock989b-8 0}ol.lst-kix_sp0v8pxmx32z-4.start{counter-reset:lst-ctn-kix_sp0v8pxmx32z-4 0}.lst-kix_pzbcxock989b-0>li:before{content:"" counter(lst-ctn-kix_pzbcxock989b-0,decimal) ". "}.lst-kix_r314j3pzqyej-3>li:before{content:"" counter(lst-ctn-kix_r314j3pzqyej-3,decimal) ". "}.lst-kix_u5qv0blvk7h4-3>li:before{content:"\0025cf  "}ol.lst-kix_ejkdfe3ymms9-8{list-style-type:none}ol.lst-kix_ejkdfe3ymms9-7{list-style-type:none}ol.lst-kix_ejkdfe3ymms9-6{list-style-type:none}.lst-kix_pzbcxock989b-4>li:before{content:"" counter(lst-ctn-kix_pzbcxock989b-4,lower-latin) ". "}ol.lst-kix_sp0v8pxmx32z-3.start{counter-reset:lst-ctn-kix_sp0v8pxmx32z-3 0}ol.lst-kix_pzbcxock989b-7.start{counter-reset:lst-ctn-kix_pzbcxock989b-7 0}ol.lst-kix_ejkdfe3ymms9-1{list-style-type:none}ol.lst-kix_ejkdfe3ymms9-0{list-style-type:none}.lst-kix_sp0v8pxmx32z-6>li{counter-increment:lst-ctn-kix_sp0v8pxmx32z-6}.lst-kix_r5obo16pindt-3>li{counter-increment:lst-ctn-kix_r5obo16pindt-3}ol.lst-kix_ejkdfe3ymms9-5{list-style-type:none}ol.lst-kix_ejkdfe3ymms9-4{list-style-type:none}ol.lst-kix_pzbcxock989b-4.start{counter-reset:lst-ctn-kix_pzbcxock989b-4 0}.lst-kix_u5qv0blvk7h4-7>li:before{content:"\0025cb  "}.lst-kix_imugtofty16d-4>li{counter-increment:lst-ctn-kix_imugtofty16d-4}ol.lst-kix_ejkdfe3ymms9-3{list-style-type:none}ol.lst-kix_ejkdfe3ymms9-2{list-style-type:none}ol.lst-kix_ep5hptutcb4a-0.start{counter-reset:lst-ctn-kix_ep5hptutcb4a-0 0}ol.lst-kix_nzp5s8piyroe-3.start{counter-reset:lst-ctn-kix_nzp5s8piyroe-3 0}.lst-kix_eacvnmgkbyni-0>li{counter-increment:lst-ctn-kix_eacvnmgkbyni-0}.lst-kix_pzbcxock989b-8>li:before{content:"" counter(lst-ctn-kix_pzbcxock989b-8,lower-roman) ". "}ul.lst-kix_hono0qt6d0bg-7{list-style-type:none}ul.lst-kix_hono0qt6d0bg-8{list-style-type:none}ol.lst-kix_nzp5s8piyroe-0.start{counter-reset:lst-ctn-kix_nzp5s8piyroe-0 0}.lst-kix_ejkdfe3ymms9-5>li{counter-increment:lst-ctn-kix_ejkdfe3ymms9-5}ol.lst-kix_ep5hptutcb4a-3.start{counter-reset:lst-ctn-kix_ep5hptutcb4a-3 0}ul.lst-kix_hono0qt6d0bg-5{list-style-type:none}ul.lst-kix_hono0qt6d0bg-6{list-style-type:none}.lst-kix_ep5hptutcb4a-8>li{counter-increment:lst-ctn-kix_ep5hptutcb4a-8}.lst-kix_sp0v8pxmx32z-4>li{counter-increment:lst-ctn-kix_sp0v8pxmx32z-4}ol.lst-kix_eacvnmgkbyni-7.start{counter-reset:lst-ctn-kix_eacvnmgkbyni-7 0}.lst-kix_r314j3pzqyej-3>li{counter-increment:lst-ctn-kix_r314j3pzqyej-3}.lst-kix_eacvnmgkbyni-5>li:before{content:"" counter(lst-ctn-kix_eacvnmgkbyni-5,lower-roman) ". "}ol.lst-kix_pzbcxock989b-5.start{counter-reset:lst-ctn-kix_pzbcxock989b-5 0}ol.lst-kix_pzbcxock989b-4{list-style-type:none}ul.lst-kix_hono0qt6d0bg-0{list-style-type:none}ol.lst-kix_pzbcxock989b-3{list-style-type:none}ol.lst-kix_nzp5s8piyroe-2.start{counter-reset:lst-ctn-kix_nzp5s8piyroe-2 0}ol.lst-kix_pzbcxock989b-2{list-style-type:none}.lst-kix_eacvnmgkbyni-5>li{counter-increment:lst-ctn-kix_eacvnmgkbyni-5}ol.lst-kix_eacvnmgkbyni-8.start{counter-reset:lst-ctn-kix_eacvnmgkbyni-8 0}ol.lst-kix_pzbcxock989b-1{list-style-type:none}ol.lst-kix_sp0v8pxmx32z-1.start{counter-reset:lst-ctn-kix_sp0v8pxmx32z-1 0}ul.lst-kix_hono0qt6d0bg-3{list-style-type:none}ol.lst-kix_pzbcxock989b-0{list-style-type:none}ul.lst-kix_hono0qt6d0bg-4{list-style-type:none}.lst-kix_sp0v8pxmx32z-3>li:before{content:"" counter(lst-ctn-kix_sp0v8pxmx32z-3,decimal) ". "}ul.lst-kix_hono0qt6d0bg-1{list-style-type:none}ul.lst-kix_hono0qt6d0bg-2{list-style-type:none}ol.lst-kix_pzbcxock989b-8{list-style-type:none}ol.lst-kix_pzbcxock989b-7{list-style-type:none}ol.lst-kix_pzbcxock989b-6{list-style-type:none}ol.lst-kix_pzbcxock989b-5{list-style-type:none}ol.lst-kix_ep5hptutcb4a-2.start{counter-reset:lst-ctn-kix_ep5hptutcb4a-2 0}.lst-kix_sp0v8pxmx32z-7>li:before{content:"" counter(lst-ctn-kix_sp0v8pxmx32z-7,lower-latin) ". "}ol.lst-kix_sp0v8pxmx32z-0.start{counter-reset:lst-ctn-kix_sp0v8pxmx32z-0 0}.lst-kix_pzbcxock989b-8>li{counter-increment:lst-ctn-kix_pzbcxock989b-8}ol.lst-kix_nzp5s8piyroe-1.start{counter-reset:lst-ctn-kix_nzp5s8piyroe-1 0}.lst-kix_f4xzyjv75x54-3>li:before{content:"" counter(lst-ctn-kix_f4xzyjv75x54-3,decimal) ". "}.lst-kix_f4xzyjv75x54-7>li:before{content:"" counter(lst-ctn-kix_f4xzyjv75x54-7,lower-latin) ". "}.lst-kix_r5obo16pindt-8>li{counter-increment:lst-ctn-kix_r5obo16pindt-8}ol.lst-kix_ep5hptutcb4a-1.start{counter-reset:lst-ctn-kix_ep5hptutcb4a-1 0}.lst-kix_imugtofty16d-6>li:before{content:"" counter(lst-ctn-kix_imugtofty16d-6,decimal) ". "}ol.lst-kix_f4xzyjv75x54-4.start{counter-reset:lst-ctn-kix_f4xzyjv75x54-4 0}.lst-kix_imugtofty16d-7>li:before{content:"" counter(lst-ctn-kix_imugtofty16d-7,lower-latin) ". "}.lst-kix_ep5hptutcb4a-8>li:before{content:"" counter(lst-ctn-kix_ep5hptutcb4a-8,lower-roman) ". "}ol.lst-kix_eacvnmgkbyni-3.start{counter-reset:lst-ctn-kix_eacvnmgkbyni-3 0}.lst-kix_imugtofty16d-3>li:before{content:"" counter(lst-ctn-kix_imugtofty16d-3,decimal) ". "}.lst-kix_eacvnmgkbyni-7>li{counter-increment:lst-ctn-kix_eacvnmgkbyni-7}.lst-kix_imugtofty16d-4>li:before{content:"" counter(lst-ctn-kix_imugtofty16d-4,lower-latin) ". "}.lst-kix_imugtofty16d-5>li:before{content:"" counter(lst-ctn-kix_imugtofty16d-5,lower-roman) ". "}.lst-kix_nzp5s8piyroe-4>li{counter-increment:lst-ctn-kix_nzp5s8piyroe-4}.lst-kix_ejkdfe3ymms9-6>li:before{content:"" counter(lst-ctn-kix_ejkdfe3ymms9-6,decimal) ". "}ol.lst-kix_r314j3pzqyej-5.start{counter-reset:lst-ctn-kix_r314j3pzqyej-5 0}.lst-kix_ep5hptutcb4a-2>li:before{content:"" counter(lst-ctn-kix_ep5hptutcb4a-2,lower-roman) ". "}.lst-kix_ejkdfe3ymms9-5>li:before{content:"" counter(lst-ctn-kix_ejkdfe3ymms9-5,lower-roman) ". "}.lst-kix_ep5hptutcb4a-1>li:before{content:"" counter(lst-ctn-kix_ep5hptutcb4a-1,lower-latin) ". "}.lst-kix_f4xzyjv75x54-0>li{counter-increment:lst-ctn-kix_f4xzyjv75x54-0}.lst-kix_ejkdfe3ymms9-3>li:before{content:"" counter(lst-ctn-kix_ejkdfe3ymms9-3,decimal) ". "}.lst-kix_imugtofty16d-2>li:before{content:"" counter(lst-ctn-kix_imugtofty16d-2,lower-roman) ". "}.lst-kix_ejkdfe3ymms9-2>li:before{content:"" counter(lst-ctn-kix_ejkdfe3ymms9-2,lower-roman) ". "}.lst-kix_ejkdfe3ymms9-4>li:before{content:"" counter(lst-ctn-kix_ejkdfe3ymms9-4,lower-latin) ". "}.lst-kix_ep5hptutcb4a-0>li:before{content:"" counter(lst-ctn-kix_ep5hptutcb4a-0,decimal) ". "}ol.lst-kix_r5obo16pindt-6.start{counter-reset:lst-ctn-kix_r5obo16pindt-6 0}.lst-kix_sp0v8pxmx32z-0>li{counter-increment:lst-ctn-kix_sp0v8pxmx32z-0}ol.lst-kix_nzp5s8piyroe-4.start{counter-reset:lst-ctn-kix_nzp5s8piyroe-4 0}.lst-kix_imugtofty16d-0>li:before{content:"" counter(lst-ctn-kix_imugtofty16d-0,decimal) ". "}.lst-kix_imugtofty16d-1>li:before{content:"" counter(lst-ctn-kix_imugtofty16d-1,lower-latin) ". "}ol.lst-kix_ejkdfe3ymms9-6.start{counter-reset:lst-ctn-kix_ejkdfe3ymms9-6 0}ol.lst-kix_pzbcxock989b-6.start{counter-reset:lst-ctn-kix_pzbcxock989b-6 0}.lst-kix_ejkdfe3ymms9-7>li:before{content:"" counter(lst-ctn-kix_ejkdfe3ymms9-7,lower-latin) ". "}.lst-kix_ep5hptutcb4a-3>li:before{content:"" counter(lst-ctn-kix_ep5hptutcb4a-3,decimal) ". "}.lst-kix_ejkdfe3ymms9-8>li:before{content:"" counter(lst-ctn-kix_ejkdfe3ymms9-8,lower-roman) ". "}.lst-kix_ep5hptutcb4a-4>li:before{content:"" counter(lst-ctn-kix_ep5hptutcb4a-4,lower-latin) ". "}.lst-kix_ep5hptutcb4a-5>li:before{content:"" counter(lst-ctn-kix_ep5hptutcb4a-5,lower-roman) ". "}.lst-kix_ejkdfe3ymms9-2>li{counter-increment:lst-ctn-kix_ejkdfe3ymms9-2}.lst-kix_ep5hptutcb4a-7>li:before{content:"" counter(lst-ctn-kix_ep5hptutcb4a-7,lower-latin) ". "}.lst-kix_ep5hptutcb4a-6>li:before{content:"" counter(lst-ctn-kix_ep5hptutcb4a-6,decimal) ". "}ol.lst-kix_r314j3pzqyej-7{list-style-type:none}ol.lst-kix_r314j3pzqyej-8{list-style-type:none}.lst-kix_pzbcxock989b-1>li{counter-increment:lst-ctn-kix_pzbcxock989b-1}ol.lst-kix_imugtofty16d-7.start{counter-reset:lst-ctn-kix_imugtofty16d-7 0}ol.lst-kix_r314j3pzqyej-3{list-style-type:none}ol.lst-kix_r314j3pzqyej-4{list-style-type:none}ol.lst-kix_r314j3pzqyej-5{list-style-type:none}ol.lst-kix_r314j3pzqyej-6{list-style-type:none}.lst-kix_imugtofty16d-0>li{counter-increment:lst-ctn-kix_imugtofty16d-0}ol.lst-kix_r5obo16pindt-1.start{counter-reset:lst-ctn-kix_r5obo16pindt-1 0}.lst-kix_r314j3pzqyej-8>li{counter-increment:lst-ctn-kix_r314j3pzqyej-8}.lst-kix_f4xzyjv75x54-7>li{counter-increment:lst-ctn-kix_f4xzyjv75x54-7}ol.lst-kix_imugtofty16d-0.start{counter-reset:lst-ctn-kix_imugtofty16d-0 0}.lst-kix_imugtofty16d-7>li{counter-increment:lst-ctn-kix_imugtofty16d-7}ol.lst-kix_ep5hptutcb4a-8{list-style-type:none}.lst-kix_ejkdfe3ymms9-0>li:before{content:"" counter(lst-ctn-kix_ejkdfe3ymms9-0,decimal) ". "}ol.lst-kix_ep5hptutcb4a-7{list-style-type:none}ol.lst-kix_ep5hptutcb4a-6{list-style-type:none}.lst-kix_ejkdfe3ymms9-1>li:before{content:"" counter(lst-ctn-kix_ejkdfe3ymms9-1,lower-latin) ". "}.lst-kix_ejkdfe3ymms9-6>li{counter-increment:lst-ctn-kix_ejkdfe3ymms9-6}ol.lst-kix_ep5hptutcb4a-5{list-style-type:none}ol.lst-kix_ep5hptutcb4a-4{list-style-type:none}.lst-kix_f4xzyjv75x54-4>li{counter-increment:lst-ctn-kix_f4xzyjv75x54-4}ol.lst-kix_ep5hptutcb4a-3{list-style-type:none}.lst-kix_ep5hptutcb4a-3>li{counter-increment:lst-ctn-kix_ep5hptutcb4a-3}ol.lst-kix_ep5hptutcb4a-5.start{counter-reset:lst-ctn-kix_ep5hptutcb4a-5 0}ol.lst-kix_ep5hptutcb4a-2{list-style-type:none}ol.lst-kix_ep5hptutcb4a-1{list-style-type:none}ol.lst-kix_ep5hptutcb4a-0{list-style-type:none}ol.lst-kix_pzbcxock989b-1.start{counter-reset:lst-ctn-kix_pzbcxock989b-1 0}ol.lst-kix_ejkdfe3ymms9-1.start{counter-reset:lst-ctn-kix_ejkdfe3ymms9-1 0}ol.lst-kix_r314j3pzqyej-0{list-style-type:none}ol.lst-kix_r314j3pzqyej-1{list-style-type:none}ol.lst-kix_r314j3pzqyej-2{list-style-type:none}.lst-kix_imugtofty16d-8>li:before{content:"" counter(lst-ctn-kix_imugtofty16d-8,lower-roman) ". "}.lst-kix_u5qv0blvk7h4-8>li:before{content:"\0025a0  "}.lst-kix_u5qv0blvk7h4-6>li:before{content:"\0025cf  "}.lst-kix_r314j3pzqyej-0>li{counter-increment:lst-ctn-kix_r314j3pzqyej-0}.lst-kix_u5qv0blvk7h4-4>li:before{content:"\0025cb  "}.lst-kix_imugtofty16d-3>li{counter-increment:lst-ctn-kix_imugtofty16d-3}ol.lst-kix_ep5hptutcb4a-8.start{counter-reset:lst-ctn-kix_ep5hptutcb4a-8 0}ol.lst-kix_sp0v8pxmx32z-6.start{counter-reset:lst-ctn-kix_sp0v8pxmx32z-6 0}.lst-kix_sp0v8pxmx32z-7>li{counter-increment:lst-ctn-kix_sp0v8pxmx32z-7}.lst-kix_r314j3pzqyej-1>li{counter-increment:lst-ctn-kix_r314j3pzqyej-1}.lst-kix_eacvnmgkbyni-3>li{counter-increment:lst-ctn-kix_eacvnmgkbyni-3}.lst-kix_u5qv0blvk7h4-0>li:before{content:"\0025cf  "}ol.lst-kix_nzp5s8piyroe-6.start{counter-reset:lst-ctn-kix_nzp5s8piyroe-6 0}.lst-kix_u5qv0blvk7h4-2>li:before{content:"\0025a0  "}ol.lst-kix_f4xzyjv75x54-6.start{counter-reset:lst-ctn-kix_f4xzyjv75x54-6 0}.lst-kix_sp0v8pxmx32z-0>li:before{content:"" counter(lst-ctn-kix_sp0v8pxmx32z-0,decimal) ". "}ol.lst-kix_r314j3pzqyej-7.start{counter-reset:lst-ctn-kix_r314j3pzqyej-7 0}.lst-kix_sp0v8pxmx32z-4>li:before{content:"" counter(lst-ctn-kix_sp0v8pxmx32z-4,lower-latin) ". "}.lst-kix_sp0v8pxmx32z-2>li:before{content:"" counter(lst-ctn-kix_sp0v8pxmx32z-2,lower-roman) ". "}.lst-kix_sp0v8pxmx32z-8>li:before{content:"" counter(lst-ctn-kix_sp0v8pxmx32z-8,lower-roman) ". "}ol.lst-kix_eacvnmgkbyni-1.start{counter-reset:lst-ctn-kix_eacvnmgkbyni-1 0}.lst-kix_sp0v8pxmx32z-6>li:before{content:"" counter(lst-ctn-kix_sp0v8pxmx32z-6,decimal) ". "}.lst-kix_nzp5s8piyroe-8>li{counter-increment:lst-ctn-kix_nzp5s8piyroe-8}ol.lst-kix_sp0v8pxmx32z-8.start{counter-reset:lst-ctn-kix_sp0v8pxmx32z-8 0}.lst-kix_r314j3pzqyej-7>li{counter-increment:lst-ctn-kix_r314j3pzqyej-7}ol.lst-kix_r314j3pzqyej-8.start{counter-reset:lst-ctn-kix_r314j3pzqyej-8 0}ol.lst-kix_f4xzyjv75x54-2{list-style-type:none}ol.lst-kix_f4xzyjv75x54-1{list-style-type:none}ol.lst-kix_f4xzyjv75x54-0{list-style-type:none}.lst-kix_r5obo16pindt-5>li{counter-increment:lst-ctn-kix_r5obo16pindt-5}.lst-kix_pzbcxock989b-5>li{counter-increment:lst-ctn-kix_pzbcxock989b-5}.lst-kix_sp0v8pxmx32z-8>li{counter-increment:lst-ctn-kix_sp0v8pxmx32z-8}ol.lst-kix_r314j3pzqyej-2.start{counter-reset:lst-ctn-kix_r314j3pzqyej-2 0}.lst-kix_pzbcxock989b-4>li{counter-increment:lst-ctn-kix_pzbcxock989b-4}.lst-kix_ejkdfe3ymms9-1>li{counter-increment:lst-ctn-kix_ejkdfe3ymms9-1}ol.lst-kix_f4xzyjv75x54-8{list-style-type:none}ol.lst-kix_f4xzyjv75x54-7{list-style-type:none}ol.lst-kix_f4xzyjv75x54-6{list-style-type:none}ol.lst-kix_f4xzyjv75x54-5{list-style-type:none}ol.lst-kix_f4xzyjv75x54-4{list-style-type:none}ol.lst-kix_f4xzyjv75x54-3{list-style-type:none}ul.lst-kix_r4dm149pe9b-6{list-style-type:none}ol.lst-kix_f4xzyjv75x54-7.start{counter-reset:lst-ctn-kix_f4xzyjv75x54-7 0}ul.lst-kix_r4dm149pe9b-7{list-style-type:none}ul.lst-kix_r4dm149pe9b-4{list-style-type:none}ul.lst-kix_r4dm149pe9b-5{list-style-type:none}ul.lst-kix_r4dm149pe9b-2{list-style-type:none}.lst-kix_xa4117mzq1wh-6>li:before{content:"\0025cf  "}ul.lst-kix_r4dm149pe9b-3{list-style-type:none}ul.lst-kix_r4dm149pe9b-0{list-style-type:none}ul.lst-kix_r4dm149pe9b-1{list-style-type:none}.lst-kix_nzp5s8piyroe-5>li{counter-increment:lst-ctn-kix_nzp5s8piyroe-5}ol.lst-kix_r5obo16pindt-3.start{counter-reset:lst-ctn-kix_r5obo16pindt-3 0}.lst-kix_xa4117mzq1wh-7>li:before{content:"\0025cb  "}ol.lst-kix_ejkdfe3ymms9-3.start{counter-reset:lst-ctn-kix_ejkdfe3ymms9-3 0}.lst-kix_ep5hptutcb4a-0>li{counter-increment:lst-ctn-kix_ep5hptutcb4a-0}ul.lst-kix_r4dm149pe9b-8{list-style-type:none}.lst-kix_eacvnmgkbyni-6>li{counter-increment:lst-ctn-kix_eacvnmgkbyni-6}.lst-kix_33xphoc5k4bj-7>li:before{content:"\00274f  "}.lst-kix_33xphoc5k4bj-4>li:before{content:"\00274f  "}.lst-kix_33xphoc5k4bj-8>li:before{content:"\00274f  "}.lst-kix_r4dm149pe9b-7>li:before{content:"\0025cb  "}.lst-kix_ep5hptutcb4a-2>li{counter-increment:lst-ctn-kix_ep5hptutcb4a-2}.lst-kix_xa4117mzq1wh-3>li:before{content:"\0025cf  "}ol.lst-kix_eacvnmgkbyni-0.start{counter-reset:lst-ctn-kix_eacvnmgkbyni-0 0}.lst-kix_r4dm149pe9b-3>li:before{content:"\0025cf  "}.lst-kix_xa4117mzq1wh-2>li:before{content:"\0025a0  "}.lst-kix_nzp5s8piyroe-0>li:before{content:"" counter(lst-ctn-kix_nzp5s8piyroe-0,decimal) ". "}.lst-kix_33xphoc5k4bj-0>li:before{content:"\01f4c2  "}.lst-kix_eacvnmgkbyni-8>li{counter-increment:lst-ctn-kix_eacvnmgkbyni-8}.lst-kix_r4dm149pe9b-2>li:before{content:"\0025a0  "}.lst-kix_r4dm149pe9b-6>li:before{content:"\0025cf  "}.lst-kix_33xphoc5k4bj-3>li:before{content:"\01f4c1  "}.lst-kix_nzp5s8piyroe-3>li{counter-increment:lst-ctn-kix_nzp5s8piyroe-3}.lst-kix_nzp5s8piyroe-8>li:before{content:"" counter(lst-ctn-kix_nzp5s8piyroe-8,lower-roman) ". "}.lst-kix_f4xzyjv75x54-8>li{counter-increment:lst-ctn-kix_f4xzyjv75x54-8}ol.lst-kix_ejkdfe3ymms9-2.start{counter-reset:lst-ctn-kix_ejkdfe3ymms9-2 0}.lst-kix_nzp5s8piyroe-7>li{counter-increment:lst-ctn-kix_nzp5s8piyroe-7}.lst-kix_eacvnmgkbyni-0>li:before{content:"" counter(lst-ctn-kix_eacvnmgkbyni-0,decimal) ". "}.lst-kix_nzp5s8piyroe-3>li:before{content:"" counter(lst-ctn-kix_nzp5s8piyroe-3,decimal) ". "}ol.lst-kix_r5obo16pindt-8.start{counter-reset:lst-ctn-kix_r5obo16pindt-8 0}.lst-kix_hono0qt6d0bg-4>li:before{content:"\00274f  "}.lst-kix_nzp5s8piyroe-4>li:before{content:"" counter(lst-ctn-kix_nzp5s8piyroe-4,lower-latin) ". "}.lst-kix_hono0qt6d0bg-5>li:before{content:"\00274f  "}.lst-kix_nzp5s8piyroe-7>li:before{content:"" counter(lst-ctn-kix_nzp5s8piyroe-7,lower-latin) ". "}ol.lst-kix_ejkdfe3ymms9-8.start{counter-reset:lst-ctn-kix_ejkdfe3ymms9-8 0}.lst-kix_hono0qt6d0bg-8>li:before{content:"\00274f  "}.lst-kix_sp0v8pxmx32z-3>li{counter-increment:lst-ctn-kix_sp0v8pxmx32z-3}.lst-kix_f4xzyjv75x54-1>li{counter-increment:lst-ctn-kix_f4xzyjv75x54-1}ol.lst-kix_nzp5s8piyroe-3{list-style-type:none}ol.lst-kix_nzp5s8piyroe-4{list-style-type:none}ol.lst-kix_nzp5s8piyroe-1{list-style-type:none}ol.lst-kix_nzp5s8piyroe-2{list-style-type:none}ol.lst-kix_nzp5s8piyroe-7{list-style-type:none}ol.lst-kix_nzp5s8piyroe-8{list-style-type:none}ol.lst-kix_nzp5s8piyroe-5{list-style-type:none}ol.lst-kix_nzp5s8piyroe-6{list-style-type:none}.lst-kix_eacvnmgkbyni-4>li{counter-increment:lst-ctn-kix_eacvnmgkbyni-4}.lst-kix_eacvnmgkbyni-1>li{counter-increment:lst-ctn-kix_eacvnmgkbyni-1}ol.lst-kix_nzp5s8piyroe-0{list-style-type:none}.lst-kix_r314j3pzqyej-1>li:before{content:"" counter(lst-ctn-kix_r314j3pzqyej-1,lower-latin) ". "}ol.lst-kix_ejkdfe3ymms9-7.start{counter-reset:lst-ctn-kix_ejkdfe3ymms9-7 0}.lst-kix_u5qv0blvk7h4-5>li:before{content:"\0025a0  "}ol.lst-kix_imugtofty16d-1{list-style-type:none}ol.lst-kix_imugtofty16d-0{list-style-type:none}.lst-kix_ep5hptutcb4a-7>li{counter-increment:lst-ctn-kix_ep5hptutcb4a-7}.lst-kix_pzbcxock989b-2>li:before{content:"" counter(lst-ctn-kix_pzbcxock989b-2,lower-roman) ". "}ol.lst-kix_imugtofty16d-2.start{counter-reset:lst-ctn-kix_imugtofty16d-2 0}.lst-kix_pzbcxock989b-6>li:before{content:"" counter(lst-ctn-kix_pzbcxock989b-6,decimal) ". "}ol.lst-kix_imugtofty16d-5.start{counter-reset:lst-ctn-kix_imugtofty16d-5 0}ol.lst-kix_eacvnmgkbyni-8{list-style-type:none}ol.lst-kix_eacvnmgkbyni-7{list-style-type:none}ol.lst-kix_eacvnmgkbyni-6{list-style-type:none}ol.lst-kix_eacvnmgkbyni-5{list-style-type:none}ol.lst-kix_eacvnmgkbyni-4{list-style-type:none}ol.lst-kix_eacvnmgkbyni-3{list-style-type:none}ol.lst-kix_eacvnmgkbyni-2{list-style-type:none}ol.lst-kix_eacvnmgkbyni-1{list-style-type:none}ol.lst-kix_r5obo16pindt-8{list-style-type:none}ol.lst-kix_eacvnmgkbyni-0{list-style-type:none}ol.lst-kix_f4xzyjv75x54-3.start{counter-reset:lst-ctn-kix_f4xzyjv75x54-3 0}ol.lst-kix_r5obo16pindt-2{list-style-type:none}ol.lst-kix_r5obo16pindt-3{list-style-type:none}ol.lst-kix_r5obo16pindt-0{list-style-type:none}ol.lst-kix_r5obo16pindt-1{list-style-type:none}ol.lst-kix_r5obo16pindt-6{list-style-type:none}ol.lst-kix_r314j3pzqyej-3.start{counter-reset:lst-ctn-kix_r314j3pzqyej-3 0}ol.lst-kix_r5obo16pindt-7{list-style-type:none}ol.lst-kix_r5obo16pindt-4{list-style-type:none}ol.lst-kix_f4xzyjv75x54-0.start{counter-reset:lst-ctn-kix_f4xzyjv75x54-0 0}ol.lst-kix_r5obo16pindt-5{list-style-type:none}.lst-kix_u5qv0blvk7h4-1>li:before{content:"\0025cb  "}.lst-kix_eacvnmgkbyni-3>li:before{content:"" counter(lst-ctn-kix_eacvnmgkbyni-3,decimal) ". "}.lst-kix_eacvnmgkbyni-7>li:before{content:"" counter(lst-ctn-kix_eacvnmgkbyni-7,lower-latin) ". "}.lst-kix_hono0qt6d0bg-1>li:before{content:"\01f4c2  "}ol.lst-kix_imugtofty16d-3{list-style-type:none}ol.lst-kix_imugtofty16d-2{list-style-type:none}ol.lst-kix_imugtofty16d-5{list-style-type:none}ol.lst-kix_imugtofty16d-4{list-style-type:none}ol.lst-kix_imugtofty16d-7{list-style-type:none}ol.lst-kix_imugtofty16d-6{list-style-type:none}.lst-kix_nzp5s8piyroe-0>li{counter-increment:lst-ctn-kix_nzp5s8piyroe-0}ol.lst-kix_r5obo16pindt-2.start{counter-reset:lst-ctn-kix_r5obo16pindt-2 0}ol.lst-kix_imugtofty16d-8{list-style-type:none}.lst-kix_sp0v8pxmx32z-1>li:before{content:"" counter(lst-ctn-kix_sp0v8pxmx32z-1,lower-latin) ". "}ol.lst-kix_r5obo16pindt-5.start{counter-reset:lst-ctn-kix_r5obo16pindt-5 0}.lst-kix_f4xzyjv75x54-1>li:before{content:"" counter(lst-ctn-kix_f4xzyjv75x54-1,lower-latin) ". "}.lst-kix_ejkdfe3ymms9-4>li{counter-increment:lst-ctn-kix_ejkdfe3ymms9-4}ol.lst-kix_ejkdfe3ymms9-5.start{counter-reset:lst-ctn-kix_ejkdfe3ymms9-5 0}.lst-kix_imugtofty16d-5>li{counter-increment:lst-ctn-kix_imugtofty16d-5}.lst-kix_r5obo16pindt-2>li{counter-increment:lst-ctn-kix_r5obo16pindt-2}.lst-kix_f4xzyjv75x54-3>li{counter-increment:lst-ctn-kix_f4xzyjv75x54-3}ol.lst-kix_imugtofty16d-3.start{counter-reset:lst-ctn-kix_imugtofty16d-3 0}ol.lst-kix_r314j3pzqyej-0.start{counter-reset:lst-ctn-kix_r314j3pzqyej-0 0}ul.lst-kix_u5qv0blvk7h4-8{list-style-type:none}.lst-kix_r314j3pzqyej-4>li{counter-increment:lst-ctn-kix_r314j3pzqyej-4}ol.lst-kix_f4xzyjv75x54-2.start{counter-reset:lst-ctn-kix_f4xzyjv75x54-2 0}.lst-kix_sp0v8pxmx32z-5>li:before{content:"" counter(lst-ctn-kix_sp0v8pxmx32z-5,lower-roman) ". "}ol.lst-kix_sp0v8pxmx32z-2{list-style-type:none}ol.lst-kix_sp0v8pxmx32z-3{list-style-type:none}ol.lst-kix_sp0v8pxmx32z-0{list-style-type:none}ol.lst-kix_sp0v8pxmx32z-1{list-style-type:none}.lst-kix_sp0v8pxmx32z-5>li{counter-increment:lst-ctn-kix_sp0v8pxmx32z-5}ul.lst-kix_u5qv0blvk7h4-5{list-style-type:none}ul.lst-kix_u5qv0blvk7h4-4{list-style-type:none}ul.lst-kix_u5qv0blvk7h4-7{list-style-type:none}ul.lst-kix_u5qv0blvk7h4-6{list-style-type:none}ul.lst-kix_u5qv0blvk7h4-1{list-style-type:none}ol.lst-kix_r5obo16pindt-4.start{counter-reset:lst-ctn-kix_r5obo16pindt-4 0}ul.lst-kix_u5qv0blvk7h4-0{list-style-type:none}ul.lst-kix_u5qv0blvk7h4-3{list-style-type:none}ul.lst-kix_u5qv0blvk7h4-2{list-style-type:none}.lst-kix_f4xzyjv75x54-5>li:before{content:"" counter(lst-ctn-kix_f4xzyjv75x54-5,lower-roman) ". "}ol.lst-kix_imugtofty16d-4.start{counter-reset:lst-ctn-kix_imugtofty16d-4 0}ol.lst-kix_ejkdfe3ymms9-4.start{counter-reset:lst-ctn-kix_ejkdfe3ymms9-4 0}ol.lst-kix_f4xzyjv75x54-1.start{counter-reset:lst-ctn-kix_f4xzyjv75x54-1 0}ol.lst-kix_r314j3pzqyej-1.start{counter-reset:lst-ctn-kix_r314j3pzqyej-1 0}ol.lst-kix_sp0v8pxmx32z-8{list-style-type:none}ol.lst-kix_sp0v8pxmx32z-6{list-style-type:none}.lst-kix_pzbcxock989b-2>li{counter-increment:lst-ctn-kix_pzbcxock989b-2}ol.lst-kix_sp0v8pxmx32z-7{list-style-type:none}ol.lst-kix_sp0v8pxmx32z-4{list-style-type:none}ol.lst-kix_sp0v8pxmx32z-5{list-style-type:none}ol{margin:0;padding:0}table td,table th{padding:0}.c2{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:0pt;border-right-width:0pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:0pt;border-top-style:solid;background-color:#333333;border-left-style:solid;border-bottom-width:0pt;width:468pt;border-top-color:#000000;border-bottom-style:solid}.c23{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:0pt;border-right-width:0pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:0pt;border-top-style:solid;background-color:#23241f;border-left-style:solid;border-bottom-width:0pt;width:468pt;border-top-color:#000000;border-bottom-style:solid}.c5{margin-left:18pt;padding-top:3pt;padding-bottom:0pt;line-height:1.0;orphans:2;widows:2;text-align:left}.c22{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:16pt;font-family:"Arial";font-style:normal}.c28{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:20pt;font-family:"Arial";font-style:normal}.c10{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:"Open Sans";font-style:normal}.c24{color:#434343;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:14pt;font-family:"Arial";font-style:normal}.c33{margin-left:36pt;padding-top:3pt;padding-bottom:0pt;line-height:1.0;orphans:2;widows:2;text-align:left}.c43{margin-left:18pt;padding-top:3pt;padding-bottom:4pt;line-height:1.0;orphans:2;widows:2;text-align:left}.c30{padding-top:10pt;padding-bottom:0pt;line-height:1.0;orphans:2;widows:2;text-align:left}.c45{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:right}.c44{padding-top:4pt;padding-bottom:0pt;line-height:1.0;orphans:2;widows:2;text-align:left}.c7{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:center}.c1{padding-top:0pt;padding-bottom:3pt;line-height:1.15;page-break-after:avoid;text-align:center;height:11pt}.c3{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c25{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:"Open Sans"}.c48{padding-top:0pt;padding-bottom:3pt;line-height:1.15;page-break-after:avoid;text-align:center}.c29{color:#000000;text-decoration:none;vertical-align:baseline;font-size:11pt;font-style:normal}.c13{padding-top:18pt;padding-bottom:6pt;line-height:1.15;page-break-after:avoid;text-align:left}.c15{padding-top:16pt;padding-bottom:4pt;line-height:1.15;page-break-after:avoid;text-align:left}.c42{color:#000000;text-decoration:none;vertical-align:baseline;font-size:26pt;font-style:normal}.c36{padding-top:20pt;padding-bottom:6pt;line-height:1.15;page-break-after:avoid;text-align:left}.c41{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c26{background-color:#333333;font-family:"Consolas";color:#ffffaa;font-weight:400}.c0{background-color:#23241f;font-family:"Consolas";color:#f92672;font-weight:400}.c16{border-spacing:0;border-collapse:collapse;margin-right:auto}.c20{padding-top:0pt;padding-bottom:0pt;line-height:1.15;text-align:left}.c46{text-decoration:none;vertical-align:baseline;font-size:11pt;font-style:normal}.c19{background-color:#23241f;font-family:"Consolas";color:#ae81ff;font-weight:400}.c14{background-color:#23241f;font-family:"Consolas";color:#e6db74;font-weight:400}.c4{background-color:#23241f;font-family:"Consolas";color:#f8f8f2;font-weight:400}.c18{background-color:#23241f;font-family:"Consolas";color:#a6e22e;font-weight:400}.c35{margin-left:54pt;padding-left:0pt}.c37{background-color:#23241f;color:#75715e}.c40{font-weight:400;font-family:"Arial"}.c49{max-width:468pt;padding:72pt 72pt 72pt 72pt}.c21{padding:0;margin:0}.c27{font-weight:400;font-family:"Consolas"}.c32{background-color:#333333;color:#ffffff}.c31{background-color:#333333;color:#fc9b9b}.c9{margin-left:72pt;padding-left:0pt}.c12{color:inherit;text-decoration:inherit}.c34{margin-left:36pt;padding-left:0pt}.c38{margin-left:90pt;padding-left:0pt}.c8{font-weight:700}.c11{height:11pt}.c47{height:20pt}.c6{height:0pt}.c17{font-style:italic}.c39{background-color:#ffffff}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:"Open Sans";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:"Open Sans"}p{margin:0;color:#000000;font-size:11pt;font-family:"Open Sans"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:"Open Sans";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:"Open Sans";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:"Open Sans";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:"Open Sans";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Open Sans";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Open Sans";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class="c39 c49"><div><p class="c11 c45"><span class="c10"></span></p></div><p class="c1 title" id="h.c2xjh3hb2l3g"><span class="c42 c40"></span></p><p class="c1 title" id="h.4xcwe3r8l2e8"><span class="c40 c42"></span></p><p class="c1 title" id="h.hqgjo8qwl6gx"><span class="c42 c40"></span></p><p class="c48 title" id="h.dg7clvxu168z"><span class="c42 c40">Let’s Make an RSS Reader</span></p><p class="c7 c11"><span class="c10"></span></p><p class="c7 c11"><span class="c10"></span></p><p class="c7 c11"><span class="c10"></span></p><p class="c7 c11"><span class="c10"></span></p><p class="c7 c11"><span class="c10"></span></p><p class="c7"><span class="c10">Kinman Covey</span></p><p class="c7"><span>© Utan Digital LLC 2018</span></p><hr style="page-break-before:always;display:none;"><p></p><p class="c7 c11"><span class="c10"></span></p><p class="c44"><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.5aztaapk1e8h">Quick History of RSS</a></span><span class="c8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3</span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.4e1zra0hl56">Trivia</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.4e1zra0hl56">3</a></span></p><p class="c30"><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.2y7ovmremfdo">1: Initial Setup</a></span><span class="c8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.2y7ovmremfdo">3</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.8jopi9d0t6if">Install virtualenv</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.8jopi9d0t6if">3</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.yn7iiffcmf8u">Create virtualenv</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.yn7iiffcmf8u">3</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.92zq0zk07jjh">Initialize the Virtual Environment</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.92zq0zk07jjh">3</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.7y4j5beir14l">Install Django</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.7y4j5beir14l">3</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.inbik0tzb22a">Create Django Project</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.inbik0tzb22a">4</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.61t2lif8whdc">Install remaining dependencies</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.61t2lif8whdc">4</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ixwib7fx2cye">Create Django Site</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ixwib7fx2cye">4</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.e6z556mdj506">Add our site as an application</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.e6z556mdj506">4</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.4mjhnwqlpipt">Write our first view</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.4mjhnwqlpipt">4</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ld9zojepvul7">Write our first URL</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ld9zojepvul7">5</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.sc55w5fteoxm">Include our app’s URL routes</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.sc55w5fteoxm">5</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ay3b5wx7jyrj">Perform our first migration</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ay3b5wx7jyrj">5</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ll6ydntrd29l">Create our admin user</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ll6ydntrd29l">6</a></span></p><p class="c30"><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.dqarvz810ti0">2: Getting familiar with our data</a></span><span class="c8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.dqarvz810ti0">6</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.4bjqdohkbszr">Start our shell</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.4bjqdohkbszr">6</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.s89j45xailz1">Pull an RSS feed</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.s89j45xailz1">6</a></span></p><p class="c30"><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.meguj06xtqar">3: Creating the templates</a></span><span class="c8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.meguj06xtqar">7</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.rbwau8w5v0as">Setting up the templates folder</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.rbwau8w5v0as">7</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.m6h9q0be13bt">Create our base template</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.m6h9q0be13bt">7</a></span></p><p class="c30"><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.le61sryda8rc">4: Writing the first tests</a></span><span class="c8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.le61sryda8rc">8</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.iupo5w24gi36">Testing for no input</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.iupo5w24gi36">9</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.1gj6291cenoo">Testing for user input</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.1gj6291cenoo">10</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.eyrwb9vdqctk">Running the tests</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.eyrwb9vdqctk">10</a></span></p><p class="c30"><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.5ke1h163i8bl">5: Building the backend</a></span><span class="c8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.5ke1h163i8bl">10</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.4tu0eeh8w9fx">Extend our view</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.4tu0eeh8w9fx">10</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ikes2zaybx0k">Rendering the template</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ikes2zaybx0k">11</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.9oenty3m23ep">Passing data into the template</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.9oenty3m23ep">12</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.rlt0qp18yq81">Using data within the template</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.rlt0qp18yq81">12</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.37nesnysfxru">Render the RSS feed</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.37nesnysfxru">13</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.1ha6k6k1fmlw">Adding a form</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.1ha6k6k1fmlw">14</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.vof86fh7rpbs">Responding to input</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.vof86fh7rpbs">14</a></span></p><p class="c33"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.nuby7d5sjnza">Passing the tests</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.nuby7d5sjnza">15</a></span></p><p class="c30"><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.blopfigzurlj">6: Saving user data</a></span><span class="c8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.blopfigzurlj">15</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.im3nfoxp6zr7">Write the Model tests</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.im3nfoxp6zr7">15</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.czpc6wl1g8m4">Create the Model</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.czpc6wl1g8m4">16</a></span></p><p class="c33"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.evpav2u470g6">Migrate the changes</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.evpav2u470g6">17</a></span></p><p class="c33"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ljqrnw68jl2d">Pass the Feed Model tests</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ljqrnw68jl2d">17</a></span></p><p class="c30"><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.cjihzwarbcj8">7: Building a single page application</a></span><span class="c8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.cjihzwarbcj8">17</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.kbvgdmfro8iv">Create the RESTful tests</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.kbvgdmfro8iv">17</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.hmzde9vi8cmk">Create the serializer</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.hmzde9vi8cmk">20</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.s51841mxj69f">Create the RESTful views</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.s51841mxj69f">20</a></span></p><p class="c33"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.365xy9adhwlc">Add the new routes</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.365xy9adhwlc">23</a></span></p><p class="c33"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.l0q9k46k7bkm">Pass the tests</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.l0q9k46k7bkm">23</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.x47d1ih0subl">Create the SPA frontend</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.x47d1ih0subl">24</a></span></p><p class="c33"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.26ggywvud6d">Create the Vue app</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.26ggywvud6d">24</a></span></p><p class="c33"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ighnrfa8dqvd">Create the SPA template</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.ighnrfa8dqvd">25</a></span></p><p class="c30"><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.nghtnzvl5ypg">8: Styling the page</a></span><span class="c8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.nghtnzvl5ypg">27</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.oi7lwnddf12w">Include CSS libraries</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.oi7lwnddf12w">27</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.my329kbv45bo">Using Bootstrap styles</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.my329kbv45bo">28</a></span></p><p class="c30"><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.k81zg533xasb">9: Frontend routing</a></span><span class="c8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.k81zg533xasb">29</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.mf1dwjjos4ge">Create a control page template</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.mf1dwjjos4ge">29</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.cv3l8phldsq">Add some basic routing</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.cv3l8phldsq">30</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.acobq3girz00">Responding to the route</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.acobq3girz00">30</a></span></p><p class="c30"><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.p5dk6ns45jjg">10: Exercises</a></span><span class="c8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c8"><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.p5dk6ns45jjg">32</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.w56s677posu1">Easy</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.w56s677posu1">32</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.4y4p8j4rrlh5">Medium</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.4y4p8j4rrlh5">32</a></span></p><p class="c5"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.9t9w4z2c3144">Hard</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.9t9w4z2c3144">32</a></span></p><p class="c43"><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.aa5cosi2hhl9">Legendary</a></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span><a class="c12" href="https://utan.io/lessons/lets-make-an-rss-reader.html#h.aa5cosi2hhl9">32</a></span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3 c11"><span class="c10"></span></p><hr style="page-break-before:always;display:none;"><h1 class="c36" id="h.5aztaapk1e8h"><span class="c28">Quick History of RSS</span></h1><ul class="c21 lst-kix_r4dm149pe9b-0 start"><li class="c3 c34"><span>Originally </span><span class="c25 c17">RDF Site Summary</span></li><li class="c3 c34"><span class="c10">First version created by two engineers at Netscape</span></li><li class="c3 c34"><span>Q</span><span>uickly renamed to </span><span class="c25 c17">Rich Site Summary</span></li><li class="c3 c34"><span class="c10">Created as a means of syndicating web content</span></li><li class="c3 c34"><span class="c10">Netscape completely abandoned RSS after the AOL acquisition</span></li><li class="c3 c34"><span class="c10">Two heroes emerged to carry the torch: RSS-DEV Working Group and Dave Winer of UserLand</span></li><li class="c3 c34"><span class="c10">Development carried on independently between the two groups to bring us RSS 1.0, RSS 2.0, and other major evolutions</span></li><li class="c3 c34"><span class="c10">RSS has led to competing standards, such as Atom</span></li></ul><h2 class="c13" id="h.4e1zra0hl56"><span class="c22">Trivia</span></h2><ul class="c21 lst-kix_xa4117mzq1wh-0 start"><li class="c3 c34"><span class="c10">RSS helped ignite the podcasting scene in 2000 with Winer’s 0.92 release permitting audio files to be carried in feeds</span></li><li class="c3 c34"><span class="c10">Due to no involvement with Netscape, neither the RSS-DEV Working Group or Dave Winer can claim rights on RSS resulting in debate over who the “real” publisher of RSS is today</span></li></ul><h1 class="c36" id="h.2y7ovmremfdo"><span>1: Initial Setup</span></h1><h2 class="c13" id="h.8jopi9d0t6if"><span class="c22">Install virtualenv</span></h2><ul class="c21 lst-kix_u5qv0blvk7h4-0 start"><li class="c3 c34"><span>virtualenv</span></li></ul><h2 class="c13" id="h.yn7iiffcmf8u"><span class="c22">Create virtualenv</span></h2><a id="t.6ae683effa8e3c1f67c11980c2cf7ec185ed9e97"></a><a id="t.0"></a><table class="c16"><tbody><tr class="c6"><td class="c2" colspan="1" rowspan="1"><p class="c20"><span class="c27 c31">$</span><span class="c27 c32">&nbsp;mkdir env &amp;&amp; virtualenv env</span></p></td></tr></tbody></table><h2 class="c13" id="h.92zq0zk07jjh"><span class="c22">Initialize the Virtual Environment</span></h2><a id="t.a12777fbd296c838790b10f72932a946db268d37"></a><a id="t.1"></a><table class="c16"><tbody><tr class="c6"><td class="c2" colspan="1" rowspan="1"><p class="c20"><span class="c27 c31">$</span><span class="c27 c32">&nbsp;</span><span class="c26">source</span><span class="c27 c32">&nbsp;env/bin/activate</span></p></td></tr></tbody></table><h2 class="c13" id="h.7y4j5beir14l"><span class="c22">Install Django</span></h2><ul class="c21 lst-kix_u5qv0blvk7h4-0"><li class="c3 c34"><span class="c10">Django</span></li></ul><h2 class="c13" id="h.inbik0tzb22a"><span class="c22">Create Django Project</span></h2><a id="t.16ddedec6e4e6d321f39f5701f9d3a054b1a042f"></a><a id="t.2"></a><table class="c16"><tbody><tr class="c6"><td class="c2" colspan="1" rowspan="1"><p class="c20"><span class="c27 c31">$</span><span class="c27 c32">&nbsp;django-admin startproject rssreader</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c29 c27"></span></p><p class="c7"><span class="c17">Note: Server can be run at this point </span><span>($ </span><span class="c27">python manage.py runserver</span><span class="c40">)</span></p><h2 class="c13" id="h.61t2lif8whdc"><span class="c22">Install remaining dependencies</span></h2><ul class="c21 lst-kix_u5qv0blvk7h4-0"><li class="c3 c34"><span class="c10">feedparser</span></li><li class="c3 c34"><span>r</span><span class="c10">equests</span></li><li class="c3 c34"><span class="c10">djangorestframework</span></li></ul><h2 class="c13" id="h.ixwib7fx2cye"><span class="c22">Create Django Site</span></h2><a id="t.7220d35462becfa567f42be404550b6c89a349e5"></a><a id="t.3"></a><table class="c16"><tbody><tr class="c6"><td class="c2" colspan="1" rowspan="1"><p class="c20"><span class="c27 c31">$</span><span class="c27 c32">&nbsp;python manage.py startapp rss</span></p></td></tr></tbody></table><h2 class="c13" id="h.e6z556mdj506"><span class="c22">Add our site as an application</span></h2><p class="c3"><span>Open </span><span class="c8">rssreader/settings.py</span><span class="c10">.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Modify the </span><span class="c8">INSTALLED_APPS</span><span>&nbsp;list to include </span><span class="c8">rss.apps.RssConfig</span><span>&nbsp;and </span><span class="c8">rest_framework</span><span class="c10">.</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.382dcf1c4248869adc9ef8cb7917853f36c3c165"></a><a id="t.4"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">INSTALLED_APPS = [<br> &nbsp; &nbsp;</span><span class="c14">'django.contrib.admin'</span><span class="c4">,<br> &nbsp; &nbsp;</span><span class="c14">'django.contrib.auth'</span><span class="c4">,<br> &nbsp; &nbsp;</span><span class="c14">'django.contrib.contenttypes'</span><span class="c4">,<br> &nbsp; &nbsp;</span><span class="c14">'django.contrib.sessions'</span><span class="c4">,<br> &nbsp; &nbsp;</span><span class="c14">'django.contrib.messages'</span><span class="c4">,<br> &nbsp; &nbsp;</span><span class="c14">'django.contrib.staticfiles'</span><span class="c4">,<br> &nbsp; &nbsp;</span><span class="c14">'rest_framework'</span><span class="c4">,<br> &nbsp; &nbsp;</span><span class="c14">'rss.apps.RssConfig'</span><span class="c4">,<br>]</span></p></td></tr></tbody></table><h2 class="c13" id="h.4mjhnwqlpipt"><span class="c22">Write our first view</span></h2><p class="c3"><span>Open </span><span class="c8">rss/views.py</span><span class="c10">.</span></p><p class="c3 c11"><span class="c29 c27"></span></p><a id="t.6392ba091fc66f4d56d04d3b10571715475d7527"></a><a id="t.5"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">from</span><span class="c4">&nbsp;django.http </span><span class="c0">import</span><span class="c4">&nbsp;HttpResponse<br><br></span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">index</span><span class="c4">(request):<br> &nbsp; &nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;HttpResponse(</span><span class="c14">"RSS Reader Index View"</span><span class="c4">)</span></p></td></tr></tbody></table><h2 class="c13" id="h.ld9zojepvul7"><span class="c22">Write our first URL</span></h2><p class="c3"><span>Create new file </span><span class="c8">rss/urls.py</span><span class="c10">.</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.fd257f35b52494b8806d4193d06805a3edd6e45f"></a><a id="t.6"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">from</span><span class="c4">&nbsp;django.urls </span><span class="c0">import</span><span class="c4">&nbsp;path<br><br></span><span class="c0">from</span><span class="c4">&nbsp;. </span><span class="c0">import</span><span class="c4">&nbsp;views<br><br>urlpatterns = [<br> &nbsp; &nbsp;path(</span><span class="c14">''</span><span class="c4">, views.index, name=</span><span class="c14">'index'</span><span class="c4">)<br>]</span></p></td></tr></tbody></table><h2 class="c13" id="h.sc55w5fteoxm"><span class="c22">Include our app’s URL routes</span></h2><p class="c3"><span>Open </span><span class="c8">rssreader/urls.py</span><span class="c10">.</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.6b13be4943b9dbfa0f22a8cf7cdb29df1d45fc88"></a><a id="t.7"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">from</span><span class="c4">&nbsp;django.contrib </span><span class="c0">import</span><span class="c4">&nbsp;admin<br></span><span class="c0">from</span><span class="c4">&nbsp;django.urls </span><span class="c0">import</span><span class="c4">&nbsp;path, include<br><br>urlpatterns = [<br> &nbsp; &nbsp;path(</span><span class="c14">'admin/'</span><span class="c4">, admin.site.urls),<br> &nbsp; &nbsp;path(</span><span class="c14">'rss/'</span><span class="c4">, include(</span><span class="c14">'rss.urls'</span><span class="c4">)),<br>]</span></p></td></tr></tbody></table><h2 class="c13" id="h.ay3b5wx7jyrj"><span class="c22">Perform our first migration</span></h2><p class="c3"><span class="c10">A Django website is essentially many small applications, including ours, stitched together. Some of these applications require database functionality so we need to perform an initial migration to get those tables setup.</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.e40566dbcc63811ba0a811583ca7fa5305e14263"></a><a id="t.8"></a><table class="c16"><tbody><tr class="c6"><td class="c2" colspan="1" rowspan="1"><p class="c20"><span class="c27 c31">$</span><span class="c27 c32">&nbsp;python manage.py migrate</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span class="c25 c17">Note: even if our application doesn’t use any models or database features, many of the important Django applications do. If you ever want to login to the admin panel, or allow sessions, you need to perform this initial migration.</span></p><h2 class="c13" id="h.ll6ydntrd29l"><span class="c22">Create our admin user</span></h2><p class="c3"><span class="c10">To manage our application later on, we’ll need an administrator account.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span class="c25 c17">Note: this is the login used at our “/admin” route</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.fe4a8e12f82fb6b87955e520ecef07b4446be68e"></a><a id="t.9"></a><table class="c16"><tbody><tr class="c6"><td class="c2" colspan="1" rowspan="1"><p class="c20"><span class="c27 c31">$</span><span class="c27 c32">&nbsp;python manage.py createsuperuser</span></p></td></tr></tbody></table><h1 class="c36" id="h.dqarvz810ti0"><span class="c28">2: Getting familiar with our data</span></h1><p class="c3"><span class="c10">We will be dealing primarily with RSS feeds in the form of XML. Let’s get familiar with this data by playing around in the python shell.</span></p><h2 class="c13" id="h.4bjqdohkbszr"><span class="c22">Start our shell</span></h2><p class="c3"><span>In our virtualenv, start a python shell and import the </span><span class="c8">feedparser</span><span class="c10">&nbsp;library.</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.395368312fc694e814438c29fffd8e39921bc6bc"></a><a id="t.10"></a><table class="c16"><tbody><tr class="c6"><td class="c2" colspan="1" rowspan="1"><p class="c20"><span class="c27 c31">$</span><span class="c27 c32">&nbsp;python</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Then</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.9514b3987904883bdeabf2bb94a314b09a6dccaa"></a><a id="t.11"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c37 c27">&gt;&gt;&gt; </span><span class="c0">import</span><span class="c4">&nbsp;feedparser</span></p></td></tr></tbody></table><h2 class="c13" id="h.s89j45xailz1"><span class="c22">Pull an RSS feed</span></h2><a id="t.29f52ec653dd9abba4ebf67869ccf777a30404cf"></a><a id="t.12"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c37 c27">&gt;&gt;&gt; </span><span class="c4">feed = feedparser.parse(</span><span class="c14">'https://www.djangoproject.com/rss/weblog/'</span><span class="c4">)</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Now, </span><span class="c27">feed</span><span class="c10">&nbsp;will be a dictionary with all of our RSS data! We can access all of the articles and metadata about this website’s content straight from here.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">This is more-or-less how we will be pulling the RSS feed in our view.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span class="c17">Note: to dig deeper into the feedparser library, check out its documentation here: </span><span class="c17 c41"><a class="c12" href="https://www.google.com/url?q=https://pythonhosted.org/feedparser/introduction.html&amp;sa=D&amp;ust=1526076595028000">https://pythonhosted.org/feedparser/introduction.html</a></span></p><h1 class="c36" id="h.meguj06xtqar"><span class="c28">3: Creating the templates</span></h1><p class="c3"><span class="c10">The frontend in Django is handled via HTML templates that allow for dynamic content. We can pass data to the templates from our views or just render the template as is.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Templates can also inherit from one another and utilize ‘blocks’ to allow for dynamic content between child templates.</span></p><h2 class="c13" id="h.rbwau8w5v0as"><span class="c22">Setting up the templates folder</span></h2><p class="c3"><span class="c10">I like to provide a base template for my Django projects to hold all the necessary boilerplate.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Create new directories </span><span class="c8">rss/templates </span><span>and </span><span class="c8">rss/templates/rss</span><span class="c10">.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Your folder structure should be similar to this:</span></p><ul class="c21 lst-kix_hono0qt6d0bg-0 start"><li class="c3 c34"><span class="c10">rssreader</span></li></ul><ul class="c21 lst-kix_33xphoc5k4bj-1 start"><li class="c3 c35"><span class="c10">rssreader</span></li></ul><ul class="c21 lst-kix_hono0qt6d0bg-1 start"><li class="c3 c35"><span class="c10">rss</span></li></ul><ul class="c21 lst-kix_hono0qt6d0bg-2 start"><li class="c3 c9"><span class="c10">templates</span></li></ul><ul class="c21 lst-kix_hono0qt6d0bg-3 start"><li class="c3 c38"><span class="c10">rss</span></li></ul><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>The </span><span class="c8">templates/rss</span><span class="c10">&nbsp;folder is where all of our templates will go.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span class="c17">Note: you can specify custom template locations in your </span><span class="c8 c17">settings.py</span><span class="c17">&nbsp;file, but the default is to look within a </span><span class="c8 c17">templates/[app name]</span><span class="c17">&nbsp;directory</span></p><h2 class="c13" id="h.m6h9q0be13bt"><span class="c22">Create our base template</span></h2><p class="c3"><span>Create new file </span><span class="c8">base.html</span><span>&nbsp;within the </span><span class="c8">templates/rss</span><span class="c10">&nbsp;directory.</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.5a919668149a6a492aa62f482de58168edd61d63"></a><a id="t.13"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c37 c27">&lt;!DOCTYPE html&gt;</span><span class="c4"><br>&lt;</span><span class="c0">head</span><span class="c4">&gt;<br> &nbsp; &nbsp;&lt;</span><span class="c0">title</span><span class="c4">&gt;Django RSS Reader&lt;/</span><span class="c0">title</span><span class="c4">&gt;<br>&lt;/</span><span class="c0">head</span><span class="c4">&gt;<br>&lt;</span><span class="c0">body</span><span class="c4">&gt;<br>{% block body %}{% endblock %}<br>&lt;/</span><span class="c0">body</span><span class="c4">&gt;<br>&lt;/</span><span class="c0">html</span><span class="c4">&gt;</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c29 c27"></span></p><p class="c3"><span class="c10">The block directive, body, is where our content from child templates will go.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Create new file </span><span class="c8">reader.html</span><span>&nbsp;within the </span><span class="c8">templates/rss </span><span class="c10">directory.</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.195699b76a4f2f4a3a02b2e86c590fd787b89a52"></a><a id="t.14"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">{% extends 'rss/base.html' %}<br><br>{% block body %}<br>&lt;</span><span class="c0">p</span><span class="c4">&gt;Greetings from reader.html!&lt;/</span><span class="c0">p</span><span class="c4">&gt;<br>{% endblock %}</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Notice the </span><span class="c8">extends</span><span>&nbsp;directive at the very top. This tells Django that </span><span class="c8">reader.html</span><span>&nbsp;is a child of </span><span class="c8">base.html</span><span>. The child will inherit all of the markup from the parent and gain access to its blocks. Notice that we use the </span><span class="c8">body</span><span class="c10">&nbsp;block and add a paragraph inside.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">This is how Django structures HTML templates. Before we can use it properly, we need to construct our backend.</span></p><h1 class="c36" id="h.le61sryda8rc"><span class="c28">4: Writing the first tests</span></h1><p class="c3"><span class="c10">We want to go ahead and think through our problem in terms of code. The best way to accomplish that is to write tests for our use cases.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">We know we want our application to do a couple of things:</span></p><ol class="c21 lst-kix_ep5hptutcb4a-0 start" start="1"><li class="c3 c34"><span class="c10">Respond successfully</span></li><li class="c3 c34"><span class="c10">Accept user input</span></li><li class="c3 c34"><span class="c10">Return an RSS feed</span></li></ol><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">We can go ahead and write a couple of tests based on these requirements. They’ll fail for now, but that’s okay. Our goal is to get them to pass by the end.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Open </span><span class="c8">rss/tests.py</span><span class="c10">.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Django does us a favor by providing some of the boilerplate for our tests. Let’s write a test class for our </span><span class="c8">index</span><span>&nbsp;view.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Modify </span><span class="c8">rss/tests.py</span><span class="c10">&nbsp;to match the following:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.5cc1373cadd64b125555034ebdf159ca43970ae6"></a><a id="t.15"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">from</span><span class="c4">&nbsp;django.test </span><span class="c0">import</span><span class="c4">&nbsp;TestCase<br><br></span><span class="c0">from</span><span class="c4">&nbsp;django.urls </span><span class="c0">import</span><span class="c4">&nbsp;reverse<br><br></span><span class="c0">class</span><span class="c4">&nbsp;RssIndexViewTests(TestCase):<br> &nbsp; &nbsp;</span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">test_no_feed</span><span class="c4">(self):<br> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c0">pass</span><span class="c4"><br><br> &nbsp; &nbsp;</span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">test_user_feed</span><span class="c4">(self):<br> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c0">pass</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>We start off by importing the </span><span class="c8">reverse</span><span>&nbsp;helper function from the </span><span class="c8">django.urls</span><span class="c10">&nbsp;module. This allows us to refer to an endpoint by its name instead of its path. This comes in handy in case an endpoint ever changes.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">With our empty test class in place, we can start creating our tests.</span></p><h2 class="c13" id="h.iupo5w24gi36"><span>Testing for no input</span></h2><p class="c3"><span class="c10">Let’s write a test to describe how our application should behave when there is no RSS feed supplied.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Modify the </span><span class="c8">test_no_feed</span><span>&nbsp;method of the </span><span class="c8">RssIndexViewTests</span><span>&nbsp;class in </span><span class="c8">rss/tests.py</span><span class="c10">&nbsp;to match the following:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.e9a5225f5166c792176a5b7365500b54a7b64ed4"></a><a id="t.16"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">test_no_feed</span><span class="c4">(self):<br> &nbsp; &nbsp;response = self.client.get(reverse(</span><span class="c14">"index"</span><span class="c4">))<br><br> &nbsp; &nbsp;self.assertEqual(response.status_code, </span><span class="c19">200</span><span class="c4">)<br> &nbsp; &nbsp;self.assertEqual(response.context[</span><span class="c14">"feed"</span><span class="c4">], </span><span class="c0">None</span><span class="c4">)</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>This test uses the </span><span class="c8">client</span><span>&nbsp;object supplied by the </span><span class="c8">TestCase</span><span>&nbsp;class to “mock” an HTTP request to the </span><span class="c8">index</span><span class="c10">&nbsp;view.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>After receiving the </span><span class="c8">response</span><span>, we use the </span><span class="c8">assertEqual</span><span>&nbsp;method of the </span><span class="c8">TestCase</span><span class="c10">&nbsp;class to test two things:</span></p><ol class="c21 lst-kix_nzp5s8piyroe-0 start" start="1"><li class="c3 c34"><span class="c10">Whether or not the view responded successfully (HTTP 200)</span></li><li class="c3 c34"><span>Whether or not the </span><span class="c8">feed</span><span>&nbsp;object is </span><span class="c8 c17">None</span></li></ol><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span class="c17">Note: This applies a restriction on our view that will come into play down the line (</span><span class="c8 c17">feed</span><span class="c17">&nbsp;being </span><span class="c8 c17">None</span><span class="c25 c17">&nbsp;when no feed is supplied).</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">This properly covers our bases for the index view having no user input.</span></p><h2 class="c13" id="h.1gj6291cenoo"><span class="c22">Testing for user input</span></h2><p class="c3"><span class="c10">Now we need a test for the real functionality of our application.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Modify the </span><span class="c8">test_user_feed</span><span>&nbsp;method of the </span><span class="c8">RssIndexViewTests</span><span>&nbsp;class in </span><span class="c8">rss/tests.py</span><span class="c10">&nbsp;to match the following:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.38afba927903813993ede4da9f171a0f940e3a93"></a><a id="t.17"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">test_user_feed</span><span class="c4">(self):<br> &nbsp; &nbsp;response = self.client.get(reverse(</span><span class="c14">"index"</span><span class="c4">) + </span><span class="c14">"?url=https://www.djangoproject.com/rss/weblog/"</span><span class="c4">)<br><br> &nbsp; &nbsp;self.assertEqual(response.status_code, </span><span class="c19">200</span><span class="c4">)<br> &nbsp; &nbsp;self.assertNotEqual(response.context[</span><span class="c14">"feed"</span><span class="c4">], </span><span class="c0">None</span><span class="c4">)</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>This test is very similar to the </span><span class="c8">test_no_feed</span><span>&nbsp;method with the difference being the </span><span class="c8 c17">url</span><span>&nbsp;query parameter appended to the endpoint. Since we are supplying a feed in this use case, we instead use the </span><span class="c8">assertNotEqual</span><span>&nbsp;method to ensure that the </span><span class="c8">feed</span><span>&nbsp;object is not </span><span class="c8 c17">None</span><span class="c10">.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">These tests correctly describe the goal of our application.</span></p><h2 class="c13" id="h.eyrwb9vdqctk"><span class="c22">Running the tests</span></h2><p class="c3"><span>To run our application’s tests, we use the </span><span class="c8">test</span><span class="c10">&nbsp;utility provided by Django.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Enter the following line into your shell:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.4143941a41729f9bf4b524aeef629310be722893"></a><a id="t.18"></a><table class="c16"><tbody><tr class="c6"><td class="c2" colspan="1" rowspan="1"><p class="c20"><span class="c27 c31">$</span><span class="c27 c32">&nbsp;python manage.py </span><span class="c26">test</span><span class="c27 c32">&nbsp;rss</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c29 c27"></span></p><p class="c3"><span class="c10">You’ll notice that the tests fail. Don’t worry, they’re supposed to fail! Now we’re going to work on getting them to pass.</span></p><h1 class="c36" id="h.5ke1h163i8bl"><span class="c28">5: Building the backend</span></h1><p class="c3"><span class="c10">Now we get to the bread and butter of any Django application: views.</span></p><h2 class="c13" id="h.4tu0eeh8w9fx"><span class="c22">Extend our view</span></h2><p class="c3"><span>Open </span><span class="c8">rss/views.py</span><span>&nbsp;and import </span><span class="c8">feedparser</span><span class="c10">&nbsp;at the top.</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.01fe18d3965123e0c5dd8e6454ba6b09d142d0be"></a><a id="t.19"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">import</span><span class="c4">&nbsp;feedparser</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Extend the </span><span class="c8">index</span><span class="c10">&nbsp;view to match the following:</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.2487deb80f3d3e5b0c1b4f243c3814aa3fb46461"></a><a id="t.20"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">index</span><span class="c4">(request):<br> &nbsp; &nbsp;url = </span><span class="c14">'https://www.djangoproject.com/rss/weblog/'</span><span class="c4"><br><br> &nbsp; &nbsp;feed = feedparser.parse(url)<br><br> &nbsp; &nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;HttpResponse(feed[</span><span class="c14">"feed"</span><span class="c4">][</span><span class="c14">"title"</span><span class="c4">])</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Start up the Django server if you haven’t yet.</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.2b0873382ce11dba5cf5ea81f91d11f9e6090b45"></a><a id="t.21"></a><table class="c16"><tbody><tr class="c6"><td class="c2" colspan="1" rowspan="1"><p class="c20"><span class="c27 c31">$</span><span class="c27 c32">&nbsp;python manage.py runserver</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Open your browser and navigate to </span><span class="c8">localhost:8000/rss</span><span class="c10">.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 1.33px solid #b7b7b7; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 463.00px; height: 63.00px;"><img alt="" src="./lets-make-an-rss-reader_files/image9.png" style="width: 463.00px; height: 178.00px; margin-left: 0.00px; margin-top: -115.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c3 c11"><span class="c10"></span></p><h2 class="c13" id="h.ikes2zaybx0k"><span class="c22">Rendering the template</span></h2><p class="c3"><span class="c10">Now that we have a running view, let’s wire it up to our template.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Modify the return statement to match the following:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.2603cb7109802dc5cc2cbbdd9177af0681fa821c"></a><a id="t.22"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">return</span><span class="c4">&nbsp;render(request, </span><span class="c14">'rss/reader.html'</span><span class="c4">)</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Using the </span><span class="c8">render</span><span>&nbsp;function, provided by the </span><span class="c8">django.shortcuts</span><span class="c10">&nbsp;module, we can easily specify that one of our templates should be returned as the response.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Refresh the web browser to see our template in action.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 1.33px solid #b7b7b7; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 467.00px; height: 65.00px;"><img alt="" src="./lets-make-an-rss-reader_files/image7.png" style="width: 467.00px; height: 181.00px; margin-left: 0.00px; margin-top: -116.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c7"><span class="c25 c17">“I’m so proud of my children” - base.html</span></p><h2 class="c13" id="h.9oenty3m23ep"><span class="c22">Passing data into the template</span></h2><p class="c3"><span class="c10">With the template in place, let’s pass our RSS feed into it.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Modify the </span><span class="c8">index</span><span class="c10">&nbsp;view return statement to match the following:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.711cc211c492ef11b648ad8351d7a94b7f77a0b2"></a><a id="t.23"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">return</span><span class="c4">&nbsp;render(request, </span><span class="c14">'rss/reader.html'</span><span class="c4">, {<br> &nbsp; &nbsp;</span><span class="c14">'feed'</span><span class="c4">: feed<br>})</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c29 c27"></span></p><p class="c3"><span>Passing that dictionary into the </span><span class="c8">render</span><span>&nbsp;function adds what Django calls </span><span class="c8">context</span><span class="c10">&nbsp;to the template. The context is a dictionary of data that the template can use for decision making, rendering, and control flow.</span></p><h2 class="c13" id="h.rlt0qp18yq81"><span class="c22">Using data within the template</span></h2><p class="c3"><span class="c10">Objects within the template’s context can be access directly by name.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Modify the </span><span class="c8">reader.html</span><span class="c10">&nbsp;template to match the following:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.dd488c592af83bba31bc761276467f42626582ab"></a><a id="t.24"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">{% extends 'rss/base.html' %}<br><br>{% block body %}<br><br>&lt;</span><span class="c0">h2</span><span class="c4">&gt;{{ feed.feed.title }}&lt;/</span><span class="c0">h2</span><span class="c4">&gt;<br><br>{% endblock %}</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Notice that we’re using the </span><span class="c8">feed</span><span class="c10">&nbsp;object passed in through the context map to render the RSS feed title.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span class="c17 c25">Note: in a Django template, the double curly brace ‘{{ }}’ directives output the value of a variable rendering it straight into the HTML.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Refresh your browser to render the results.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 1.33px solid #b7b7b7; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 474.00px; height: 94.00px;"><img alt="" src="./lets-make-an-rss-reader_files/image2.png" style="width: 474.00px; height: 208.00px; margin-left: 0.00px; margin-top: -114.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c7"><span class="c25 c17">Now we’re cooking with peanut oil</span></p><h2 class="c13" id="h.37nesnysfxru"><span class="c22">Render the RSS feed</span></h2><p class="c3"><span>Modify the </span><span class="c8">reader.html</span><span class="c10">&nbsp;file to include the following:</span></p><p class="c3 c11"><span class="c29 c27"></span></p><a id="t.ac5c22b5902cab0b839e1709caf9643181c24089"></a><a id="t.25"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">{% if feed.items %}<br><br>{% for item in feed.items %}<br>&lt;</span><span class="c0">div</span><span class="c4">&gt;<br> &nbsp; &nbsp;&lt;</span><span class="c0">p</span><span class="c4">&gt;<br> &nbsp; &nbsp; &nbsp; &nbsp;{{ item.published }}<br> &nbsp; &nbsp; &nbsp; &nbsp;&lt;</span><span class="c0">a</span><span class="c4">&nbsp;</span><span class="c0">href</span><span class="c4">=</span><span class="c14">"{{ item.link }}"</span><span class="c4">&gt;{{ item.title }}&lt;/</span><span class="c0">a</span><span class="c4">&gt; <br> &nbsp; &nbsp; &nbsp; &nbsp;{{ item.author }}<br> &nbsp; &nbsp;&lt;/</span><span class="c0">p</span><span class="c4">&gt;<br>&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>{% endfor %}<br><br>{% endif %}</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>First thing, we’re testing for the proper existence of </span><span class="c8">items</span><span>&nbsp;within the </span><span class="c8">feed</span><span class="c10">&nbsp;object.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Then we use a for loop to iterate over each item and display several of its properties. We’re really interesting in seeing when the article was published, who wrote it, what its name is, and where to find it.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Refresh your browser to see this output.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span style="overflow: hidden; display: inline-block; margin: -0.00px -0.00px; border: 1.33px solid #b7b7b7; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 139.00px;"><img alt="" src="./lets-make-an-rss-reader_files/image6.png" style="width: 624.00px; height: 225.00px; margin-left: 0.00px; margin-top: -86.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><h2 class="c13" id="h.1ha6k6k1fmlw"><span class="c22">Adding a form</span></h2><p class="c3"><span class="c10">We need to add a form to our template to allow for user input.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Modify </span><span class="c8">reader.html</span><span>&nbsp;and add the following at the top of the </span><span class="c8">body</span><span class="c10">&nbsp;block:</span></p><p class="c3 c11"><span class="c29 c27"></span></p><a id="t.0a2d2c1a671ad59424a14c690a54891d09349ebb"></a><a id="t.26"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">&lt;</span><span class="c0">form</span><span class="c4">&nbsp;</span><span class="c0">action</span><span class="c4">=</span><span class="c14">""</span><span class="c4">&nbsp;</span><span class="c0">method</span><span class="c4">=</span><span class="c14">"get"</span><span class="c4">&gt;<br> &nbsp; &nbsp;&lt;</span><span class="c0">input</span><span class="c4">&nbsp;</span><span class="c0">type</span><span class="c4">=</span><span class="c14">"text"</span><span class="c4">&nbsp;</span><span class="c0">placeholder</span><span class="c4">=</span><span class="c14">"RSS feed URL"</span><span class="c4">&nbsp;</span><span class="c0">name</span><span class="c4">=</span><span class="c14">"url"</span><span class="c4">&gt;<br> &nbsp; &nbsp;&lt;</span><span class="c0">button</span><span class="c4">&nbsp;</span><span class="c0">type</span><span class="c4">=</span><span class="c14">"submit"</span><span class="c4">&gt;Go&lt;/</span><span class="c0">button</span><span class="c4">&gt;<br>&lt;/</span><span class="c0">form</span><span class="c4">&gt;</span></p></td></tr></tbody></table><h2 class="c13" id="h.vof86fh7rpbs"><span class="c22">Responding to input</span></h2><p class="c3"><span class="c10">To get any use out of our form, we have to extend our view.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Modify the </span><span class="c8">index</span><span class="c10">&nbsp;view to match the following:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.09463c4e5c2aba324d0f03846423c59f1b6da41e"></a><a id="t.27"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">index</span><span class="c4">(request):<br> &nbsp; &nbsp;</span><span class="c0">if</span><span class="c4">&nbsp;request.GET.get(</span><span class="c14">"url"</span><span class="c4">):<br> &nbsp; &nbsp; &nbsp; &nbsp;url = request.GET[</span><span class="c14">"url"</span><span class="c4">]<br> &nbsp; &nbsp; &nbsp; &nbsp;feed = feedparser.parse(url)<br> &nbsp; &nbsp;</span><span class="c0">else</span><span class="c4">:<br> &nbsp; &nbsp; &nbsp; &nbsp;feed = </span><span class="c0">None</span><span class="c4"><br><br> &nbsp; &nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;render(request, </span><span class="c14">'rss/reader.html'</span><span class="c4">, {<br> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c14">'feed'</span><span class="c4">: feed<br> &nbsp; &nbsp;})</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c29 c27"></span></p><p class="c3"><span class="c10">In just a few extra lines, we’ve gone from a static RSS reader to a completely dynamic one!</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>There is a problem, though, since our </span><span class="c8">feed</span><span>&nbsp;variable can be </span><span class="c8 c17">None</span><span class="c10">. We should check for this in our template and display a message in case there isn’t a feed available.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Modify the </span><span class="c8">rss/templates/reader.html</span><span class="c10">&nbsp;file so that the markup under the form matches this:</span></p><p class="c3 c11"><span class="c29 c27"></span></p><a id="t.a15d9af95afad299168b4622b1b3a38ac906f00e"></a><a id="t.28"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">{% if feed %}<br>&lt;</span><span class="c0">h2</span><span class="c4">&gt;{{ feed.feed.title }}&lt;/</span><span class="c0">h2</span><span class="c4">&gt;<br><br>{% if feed.items %}<br><br>{% for item in feed.items %}<br>&lt;</span><span class="c0">div</span><span class="c4">&gt;<br> &nbsp; &nbsp;&lt;</span><span class="c0">p</span><span class="c4">&gt;<br> &nbsp; &nbsp; &nbsp; &nbsp;{{ item.published }}<br> &nbsp; &nbsp; &nbsp; &nbsp;&lt;</span><span class="c0">a</span><span class="c4">&nbsp;</span><span class="c0">href</span><span class="c4">=</span><span class="c14">"{{ item.link }}"</span><span class="c4">&gt;{{ item.title }}&lt;/</span><span class="c0">a</span><span class="c4">&gt; <br> &nbsp; &nbsp; &nbsp; &nbsp;{{ item.author }}<br> &nbsp; &nbsp;&lt;/</span><span class="c0">p</span><span class="c4">&gt;<br>&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>{% endfor %}<br><br>{% endif %}<br>{% else %}<br>&lt;</span><span class="c0">p</span><span class="c4">&gt;Enter your favorite RSS feed above.&lt;/</span><span class="c0">p</span><span class="c4">&gt;<br>{% endif %}</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Refresh your browser and give it a try with your favorite RSS feed.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span style="overflow: hidden; display: inline-block; margin: -0.00px -0.00px; border: 1.33px solid #b7b7b7; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 163.00px;"><img alt="" src="./lets-make-an-rss-reader_files/image8.png" style="width: 624.00px; height: 232.00px; margin-left: 0.00px; margin-top: -69.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><h3 class="c15" id="h.nuby7d5sjnza"><span class="c24">Passing the tests</span></h3><p class="c3"><span class="c10">Now we should be able to pass our tests. Go ahead and run this command in your shell:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.4143941a41729f9bf4b524aeef629310be722893"></a><a id="t.29"></a><table class="c16"><tbody><tr class="c6"><td class="c2" colspan="1" rowspan="1"><p class="c20"><span class="c27 c31">$</span><span class="c27 c32">&nbsp;python manage.py </span><span class="c26">test</span><span class="c27 c32">&nbsp;rss</span></p></td></tr></tbody></table><h1 class="c36" id="h.blopfigzurlj"><span class="c28">6: Saving user data</span></h1><p class="c3"><span>What if we want our app to remember the feeds we enter and load them automatically when we visit the page? Luckily, we can do this with Django </span><span class="c8">Models</span><span class="c10">.</span></p><h2 class="c13" id="h.im3nfoxp6zr7"><span class="c22">Write the Model tests</span></h2><p class="c3"><span class="c10">As always, we start with tests.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Open </span><span class="c8">rss/tests.py</span><span class="c10">&nbsp;and add the following import.</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.d4d89aab060eefb02e34792bb033309d58b7a1ef"></a><a id="t.30"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">from</span><span class="c4">&nbsp;rss.models </span><span class="c0">import</span><span class="c4">&nbsp;Feed</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c29 c27"></span></p><p class="c7"><span class="c17">Note: we are establishing a naming convention for our model, </span><span class="c8 c17">Feed</span><span class="c25 c17">, and setting a restriction for our app to name the model “Feed”</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Modify </span><span class="c8">rss/tests.py</span><span class="c10">, adding the following test class:</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3 c11"><span class="c29 c27"></span></p><a id="t.103cc419a08686da6d12f0754515334a422cc530"></a><a id="t.31"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">class</span><span class="c4">&nbsp;RssFeedModelTests(TestCase):<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">setUp</span><span class="c4">(self):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Feed.objects.create(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=</span><span class="c14">"https://www.djangoproject.com/rss/weblog/"</span><span class="c4"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">test_model_has_url</span><span class="c4">(self):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;django_feed = Feed.objects.get(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=</span><span class="c14">"https://www.djangoproject.com/rss/weblog/"</span><span class="c4"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.assertEqual(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;django_feed.url,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c14">"https://www.djangoproject.com/rss/weblog/"</span><span class="c4"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</span></p></td></tr></tbody></table><p class="c7 c11"><span class="c10"></span></p><p class="c7"><span class="c25 c17">Note: line breaks inserted for readability, not necessary in your code</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">This test sets some restrictions on our future Model:</span></p><ol class="c21 lst-kix_r314j3pzqyej-0 start" start="1"><li class="c3 c34"><span class="c10">The Feed Model needs to have a URL property</span></li><li class="c3 c34"><span class="c10">The URL property needs to store the URL that the feed is created with</span></li></ol><ol class="c21 lst-kix_r314j3pzqyej-1 start" start="1"><li class="c3 c9"><span class="c17">Note: It sounds obvious, I know, but the point of unit testing is to make no assumptions about the validity of our code other than to assume it needs to be tested</span></li></ol><h2 class="c13" id="h.czpc6wl1g8m4"><span class="c22">Create the Model</span></h2><p class="c3"><span>Open </span><span class="c8">rss/models.py</span><span class="c10">&nbsp;and add the following Model class:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.3af01a24fff4a582c61e549af46c8c007e062c9b"></a><a id="t.32"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">class</span><span class="c4">&nbsp;Feed(models.Model):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url = models.URLField(max_length=</span><span class="c19">255</span><span class="c4">, unique=</span><span class="c0">True</span><span class="c4">)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">__repr__</span><span class="c4">(self):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;</span><span class="c14">"&lt;Feed '{}'&gt;"</span><span class="c4">.format(self.url)</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>As you can see, we create the </span><span class="c8">Feed</span><span>&nbsp;model with one property: </span><span class="c8">url</span><span>. The URL is all we need to store an RSS feed for later consumption. We are also setting the </span><span class="c8">unique</span><span>&nbsp;property to </span><span class="c8 c17">True</span><span class="c10">. This will ensure that any attempt at submitting a duplicate feed returns an error.</span></p><h3 class="c15" id="h.evpav2u470g6"><span class="c24">Migrate the changes</span></h3><a id="t.b675ccace5927ce78da0a5d343fb338bad1253a9"></a><a id="t.33"></a><table class="c16"><tbody><tr class="c6"><td class="c2" colspan="1" rowspan="1"><p class="c20"><span class="c27 c31">$</span><span class="c27 c32">&nbsp;python manage.py makemigrations &amp;&amp; python manage.py migrate</span></p></td></tr></tbody></table><h3 class="c15" id="h.ljqrnw68jl2d"><span class="c24">Pass the Feed Model tests</span></h3><p class="c3"><span class="c10">Go ahead and ensure that the tests are passing for our new addition.</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.4143941a41729f9bf4b524aeef629310be722893"></a><a id="t.34"></a><table class="c16"><tbody><tr class="c6"><td class="c2" colspan="1" rowspan="1"><p class="c20"><span class="c27 c31">$</span><span class="c27 c32">&nbsp;python manage.py </span><span class="c26">test</span><span class="c27 c32">&nbsp;rss</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><h1 class="c36" id="h.cjihzwarbcj8"><span class="c28">7: Building a single page application</span></h1><p class="c3"><span class="c10">Modern web applications are not driven by forms and page loads, they’re driven by asynchronous API calls and JavaScript. We can take our application and transform it into a modern SPA (single page application) with Vue.js and the Django Rest Framework.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span class="c17">Note: to get familiar with Vue.js beyond this lesson, check out its documentation here: </span><span class="c41 c17"><a class="c12" href="https://www.google.com/url?q=https://vuejs.org/&amp;sa=D&amp;ust=1526076595078000">https://vuejs.org/</a></span><span class="c25 c17">.</span></p><p class="c7"><span class="c17">Note: to get familiar with the Django Rest Framework, check out its documentation here: </span><span class="c41 c17"><a class="c12" href="https://www.google.com/url?q=http://www.django-rest-framework.org/&amp;sa=D&amp;ust=1526076595079000">http://www.django-rest-framework.org/</a></span><span class="c17">.</span></p><h2 class="c13" id="h.kbvgdmfro8iv"><span class="c22">Create the RESTful tests</span></h2><p class="c3"><span>Open </span><span class="c8">rss/tests.py</span><span class="c10">&nbsp;and add the following import statement:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.f8ef5fbd37929d85b9a4bf38742c5f0bd4da1ded"></a><a id="t.35"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">import</span><span class="c4">&nbsp;json</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c29 c27"></span></p><p class="c3"><span class="c10">Add the following two test classes:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.cad621db8c24c8a6870536042fe8b276c47f4a09"></a><a id="t.36"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">class</span><span class="c4">&nbsp;RssRestFeedsViewTests(TestCase):<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">test_create_feed</span><span class="c4">(self):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url = </span><span class="c14">"https://www.djangoproject.com/rss/weblog/"</span><span class="c4"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json_data = json.dumps({ </span><span class="c14">"url"</span><span class="c4">: url })<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response = self.client.post(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reverse(</span><span class="c14">"rest-feeds"</span><span class="c4">),<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json_data,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content_type=</span><span class="c14">"application/json"</span><span class="c4"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;feeds = Feed.objects.all()<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.assertEqual(response.status_code, </span><span class="c19">201</span><span class="c4">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.assertQuerysetEqual(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;feeds, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[</span><span class="c14">"&lt;Feed '{}'&gt;"</span><span class="c4">.format(url)]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">test_get_feeds</span><span class="c4">(self):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url = </span><span class="c14">"https://www.djangoproject.com/rss/weblog/"</span><span class="c4"><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Feed.objects.create(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=url<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response = self.client.get(reverse(</span><span class="c14">'rest-feeds'</span><span class="c4">))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;feed = response.json()[</span><span class="c19">0</span><span class="c4">]<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.assertEqual(response.status_code, </span><span class="c19">200</span><span class="c4">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.assertEqual(feed[</span><span class="c14">"url"</span><span class="c4">], url)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">test_update_feed</span><span class="c4">(self):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url = </span><span class="c14">"https://www.djangoproject.com/rss/weblog/"</span><span class="c4"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_url = </span><span class="c14">"https://utan.io/?feed=rss2"</span><span class="c4"><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Feed.objects.create(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=url<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json_data = json.dumps({<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c14">"url"</span><span class="c4">: new_url&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response = self.client.put(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c14">"/rss/feeds/1/"</span><span class="c4">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;json_data,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content_type=</span><span class="c14">"application/json"</span><span class="c4"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;feeds = Feed.objects.all()<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.assertEqual(response.status_code, </span><span class="c19">200</span><span class="c4">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.assertQuerysetEqual(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;feeds,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[</span><span class="c14">"&lt;Feed '{}'&gt;"</span><span class="c4">.format(new_url)]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">test_delete_feed</span><span class="c4">(self):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Feed.objects.create(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=</span><span class="c14">"https://www.djangoproject.com/rss/weblog/"</span><span class="c4"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response = self.client.delete(</span><span class="c14">"/rss/feeds/1/"</span><span class="c4">)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;feeds = Feed.objects.all()<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.assertEqual(response.status_code, </span><span class="c19">200</span><span class="c4">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.assertQuerysetEqual(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;feeds,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br></span><span class="c0">class</span><span class="c4">&nbsp;RssRestItemsViewTests(TestCase):<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">test_get_items</span><span class="c4">(self):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Feed.objects.create(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=</span><span class="c14">"https://www.djangoproject.com/rss/weblog/"</span><span class="c4"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;response = self.client.get(reverse(</span><span class="c14">"rest-items"</span><span class="c4">))<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.assertEqual(response.status_code, </span><span class="c19">200</span><span class="c4">)</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Once again, we are defining how our app will behave through our tests. Through this test, we can see that our </span><span class="c8">Feed</span><span>&nbsp;</span><span class="c10">REST endpoint should accurately return the existing Models from the database, create new ones, update attributes, and delete Feeds without any issues.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>We also test for a second endpoint that retrieves RSS </span><span class="c8 c17">items</span><span>. Items aren’t one of our models, nor are they defined elsewhere in our app. This is because we won’t be storing them and will instead be retrieving them ondemand based on our stored </span><span class="c8">Feeds</span><span>.</span></p><h2 class="c13" id="h.hmzde9vi8cmk"><span class="c22">Create the serializer</span></h2><p class="c3"><span>Create new file </span><span class="c8">rss/serializers.py</span><span class="c10">&nbsp;and add the following:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.267b8bf0a3fbb7f068404131df3af167dc068788"></a><a id="t.37"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">from</span><span class="c4">&nbsp;rest_framework </span><span class="c0">import</span><span class="c4">&nbsp;serializers<br></span><span class="c0">from</span><span class="c4">&nbsp;.models </span><span class="c0">import</span><span class="c4">&nbsp;Feed<br><br></span><span class="c0">class</span><span class="c4">&nbsp;FeedSerializer(serializers.ModelSerializer):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">class</span><span class="c4">&nbsp;Meta:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;model = Feed<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fields = (</span><span class="c14">'id'</span><span class="c4">, </span><span class="c14">'url'</span><span class="c4">)</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>This </span><span class="c8">serializer</span><span>&nbsp;allows the Django Rest Framework to properly transform our </span><span class="c8">Feed</span><span>&nbsp;Model to JSON, and vice versa. Using the </span><span class="c8">ModelSerializer</span><span>&nbsp;allows us to skip most of the boilerplate, such as explicitly defining each field that our Model has within the serializer class.</span></p><h2 class="c13" id="h.s51841mxj69f"><span class="c22">Create the RESTful views</span></h2><p class="c3"><span>Open </span><span class="c8">rss/views.py</span><span class="c10">&nbsp;and add the following import statements:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.3b22457e5789e63fa173349ea7d2f1db1dee74b4"></a><a id="t.38"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">from</span><span class="c4">&nbsp;django.http </span><span class="c0">import</span><span class="c4">&nbsp;JsonResponse<br></span><span class="c0">from</span><span class="c4">&nbsp;django.views.decorators.csrf </span><span class="c0">import</span><span class="c4">&nbsp;csrf_exempt<br></span><span class="c0">from</span><span class="c4">&nbsp;rest_framework.renderers </span><span class="c0">import</span><span class="c4">&nbsp;JSONRenderer<br></span><span class="c0">from</span><span class="c4">&nbsp;rest_framework.parsers </span><span class="c0">import</span><span class="c4">&nbsp;JSONParser<br></span><span class="c0">from</span><span class="c4">&nbsp;.serializers </span><span class="c0">import</span><span class="c4">&nbsp;FeedSerializer<br></span><span class="c0">from</span><span class="c4">&nbsp;.models </span><span class="c0">import</span><span class="c46 c4">&nbsp;Feed</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Within the </span><span class="c8">rss/views.py</span><span class="c10">&nbsp;file, add the following view:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.ae45904eb7154040021651293a0ec8237982a39d"></a><a id="t.39"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c27 c37">@csrf_exempt</span><span class="c4"><br></span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">rest_feeds</span><span class="c4">(request):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">if</span><span class="c4">&nbsp;request.method == </span><span class="c14">"GET"</span><span class="c4">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;feeds = Feed.objects.all()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serializer = FeedSerializer(feeds, many=</span><span class="c0">True</span><span class="c4">)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;JsonResponse(serializer.data, safe=</span><span class="c0">False</span><span class="c4">)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">elif</span><span class="c4">&nbsp;request.method == </span><span class="c14">"POST"</span><span class="c4">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data = JSONParser().parse(request)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serializer = FeedSerializer(data=data)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">if</span><span class="c4">&nbsp;serializer.is_valid():<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serializer.save()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;JsonResponse(serializer.data, status=</span><span class="c19">201</span><span class="c4">)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;JsonResponse(serializer.errors, status=</span><span class="c19">400</span><span class="c4">)</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Notice the </span><span class="c8">csrf_exempt</span><span class="c10">&nbsp;decorator at the top of the definition. This allows for requests to this endpoint to be POST requests and not need a CSRF token.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span class="c25 c17">Note: this decorator should not be used liberally and should be used with the utmost caution in production. Since this app is solely a local web app for personal use, it’s safe.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Getting every </span><span class="c8">Feed</span><span class="c10">&nbsp;at once is great, but there will be cases down the road when we need to fetch just one for viewing or modification.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Add the following view to </span><span class="c8">rss/views.py</span><span class="c10">:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.218e9c833c98bd827ee4ab091291247196775ee2"></a><a id="t.40"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c37 c27">@csrf_exempt</span><span class="c4"><br></span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">rest_feeds_detail</span><span class="c4">(request, pk):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">try</span><span class="c4">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;feed = Feed.objects.get(pk=pk)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">except</span><span class="c4">&nbsp;Feed.DoesNotExist:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;HttpResponse(status=404)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">if</span><span class="c4">&nbsp;request.method == </span><span class="c14">"GET"</span><span class="c4">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serializer = FeedSerializer(feed)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;JsonResponse(serializer.data)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">elif</span><span class="c4">&nbsp;request.method == </span><span class="c14">"PUT"</span><span class="c4">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data = JSONParser().parse(request)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serializer = FeedSerializer(feed, data=data)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">if</span><span class="c4">&nbsp;serializer.is_valid():<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;serializer.save()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;JsonResponse(serializer.data)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;JsonResponse(serializer.errors, status=</span><span class="c19">400</span><span class="c4">)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">elif</span><span class="c4">&nbsp;request.method == </span><span class="c14">"DELETE"</span><span class="c4">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;feed.delete()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;HttpResponse()</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Finally, let’s add our </span><span class="c8 c17">items</span><span class="c10">&nbsp;endpoint.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Add the following view to </span><span class="c8">rss/views.py</span><span class="c10">:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.d134edf981b0e44770d67faff767d8d553f6ea0f"></a><a id="t.41"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c37 c27">@csrf_exempt</span><span class="c4"><br></span><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">rest_items</span><span class="c4">(request):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;feeds = Feed.objects.all()<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = []<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">for</span><span class="c4">&nbsp;feed </span><span class="c0">in</span><span class="c4">&nbsp;feeds:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rss = feedparser.parse(feed.url)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">try</span><span class="c4">:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items.extend(rss[</span><span class="c14">"items"</span><span class="c4">])<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">except</span><span class="c4">&nbsp;KeyError:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">continue</span><span class="c4"><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items = list(reversed(sorted(items, key=</span><span class="c0">lambda</span><span class="c4">&nbsp;item: item[</span><span class="c14">"published_parsed"</span><span class="c4">])))<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;JsonResponse(items, safe=</span><span class="c0">False</span><span class="c4">)</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c29 c27"></span></p><p class="c3"><span>The functionality of this view should look familiar as we’re using the </span><span class="c8">feedparser</span><span>&nbsp;module to grab all of the items from each of our stored </span><span class="c8">Feed</span><span>&nbsp;Models. Once we have each item, we sort them by their </span><span class="c8">published_parse</span><span>&nbsp;attribute using the built-in </span><span class="c8">sorted</span><span>&nbsp;and </span><span class="c8">reversed</span><span>&nbsp;methods. After that, we return it as a </span><span class="c8 c17">JsonResponse</span><span class="c10">.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span class="c17">Note: setting the </span><span class="c8">safe</span><span class="c8 c17">&nbsp;</span><span class="c17">flag to </span><span class="c8 c17">False</span><span class="c17">&nbsp;allows us to send objects other than Python dictionaries, e.g. a list of dictionaries</span></p><h3 class="c15" id="h.365xy9adhwlc"><span class="c24">Add the new routes</span></h3><p class="c3"><span>Open </span><span class="c8">rss/urls.py</span><span class="c10">&nbsp;and add the following import statement:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.3bd0b2c79de7b2cd209da9871ae1de378b0f8ad2"></a><a id="t.42"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">from</span><span class="c4">&nbsp;django.urls </span><span class="c0">import</span><span class="c4">&nbsp;re_path</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>The add the following endpoints to </span><span class="c8">urlpatterns</span><span class="c10">:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.93270a0a0d17bfdf97a54c3c8514fd07e05adc9e"></a><a id="t.43"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">path(</span><span class="c14">'feeds/'</span><span class="c4">, views.rest_feeds, name=</span><span class="c14">'rest-feeds'</span><span class="c4">),<br>re_path(</span><span class="c14">r'^feeds/(?P&lt;pk&gt;[0-9]+)/$'</span><span class="c4">, views.rest_feeds_detail, name=</span><span class="c14">'rest-feeds-detail'</span><span class="c4">),<br>path(</span><span class="c14">'items/'</span><span class="c4">, views.rest_items, name=</span><span class="c14">'rest-items'</span><span class="c4">)</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>This should do it for our RESTful endpoints. Now we just need to update our </span><span class="c8">index</span><span class="c10">&nbsp;view to simply handle rendering our template.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Open </span><span class="c8">rss/views.py</span><span>&nbsp;and modify the </span><span class="c8">index</span><span class="c10">&nbsp;view to match the following:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.260c4ea4f34765a7c841df5d26aedb7613c5e6f5"></a><a id="t.44"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">def</span><span class="c4">&nbsp;</span><span class="c18">index</span><span class="c4">(request):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;render(request, </span><span class="c14">'rss/reader.html'</span><span class="c4">)</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>This would also be a good time to remove the </span><span class="c8">RssRestFeedsViewTests </span><span>class altogether since this view no longer services any complex functionality.</span></p><h3 class="c15" id="h.l0q9k46k7bkm"><span class="c24">Pass the tests</span></h3><p class="c3"><span class="c10">Let’s ensure that our tests are passing now that our endpoints are created:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.4143941a41729f9bf4b524aeef629310be722893"></a><a id="t.45"></a><table class="c16"><tbody><tr class="c6"><td class="c2" colspan="1" rowspan="1"><p class="c20"><span class="c27 c31">$</span><span class="c27 c32">&nbsp;python manage.py </span><span class="c26">test</span><span class="c27 c32">&nbsp;rss</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c29 c27"></span></p><p class="c7"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 1.33px solid #b7b7b7; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 349.00px; height: 112.00px;"><img alt="" src="./lets-make-an-rss-reader_files/image1.png" style="width: 349.00px; height: 112.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c7"><span class="c17">“I do not pilfer victory.” - Alexander the Great, allegedly</span></p><h2 class="c13" id="h.x47d1ih0subl"><span class="c22">Create the SPA frontend</span></h2><p class="c3"><span class="c10">Let’s go ahead and install Vue.js within our template.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Open </span><span class="c8">base.html</span><span>&nbsp;and include this tag at the bottom of the </span><span class="c8">head</span><span class="c10">:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.f45057864171dc50c7aaa5e8daeacd55f9a39e0e"></a><a id="t.46"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">&lt;</span><span class="c0">script</span><span class="c4">&nbsp;</span><span class="c0">src</span><span class="c4">=</span><span class="c14">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span><span class="c4">&gt;&lt;/</span><span class="c0">script</span><span class="c4">&gt;</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c29 c27"></span></p><p class="c7"><span class="c25 c17">Note: this is the development build of Vue. It provides some more descriptive console errors and other nice developer features so it’s perfect for this exercise.</span></p><h3 class="c15" id="h.26ggywvud6d"><span class="c24">Create the Vue app</span></h3><p class="c3"><span>Create a new folder in the </span><span class="c8">rss</span><span>&nbsp;directory called </span><span class="c8">static</span><span class="c10">.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>In the </span><span class="c8">rss/static</span><span>&nbsp;folder, create a new folder called </span><span class="c8">rss</span><span class="c10">.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span class="c17">Note: this should be a familiar structure (think templates, from earlier)</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Create new file </span><span class="c8">rss/static/rss/app.js</span><span class="c10">&nbsp;and add the following:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.d0acb24c241974bd11d77413e169599cc0ff8b3f"></a><a id="t.47"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c0">var</span><span class="c4">&nbsp;rssApp = </span><span class="c0">new</span><span class="c4">&nbsp;Vue({<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">el</span><span class="c4">: </span><span class="c14">'#rss-app'</span><span class="c4">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">data</span><span class="c4">: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">items</span><span class="c4">: [],<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">feeds</span><span class="c4">: [],<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">newLink</span><span class="c4">: </span><span class="c14">""</span><span class="c4"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">methods</span><span class="c4">: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">api</span><span class="c4">: </span><span class="c0">function</span><span class="c4">(endpoint, method, data) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">var</span><span class="c4">&nbsp;config = {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">method</span><span class="c4">: method || </span><span class="c14">'GET'</span><span class="c4">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">body</span><span class="c4">: data !== </span><span class="c19">undefined</span><span class="c4">&nbsp;? </span><span class="c14">JSON</span><span class="c4">.stringify(data) : </span><span class="c19">null</span><span class="c4">,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">headers</span><span class="c4">: {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c14">'content-type'</span><span class="c4">: </span><span class="c14">'application/json'</span><span class="c4"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">return</span><span class="c4">&nbsp;fetch(endpoint, config)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.then((response) =&gt; response.json())<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.catch((error) =&gt; </span><span class="c14">console</span><span class="c4">.log(error));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">reload</span><span class="c4">: </span><span class="c0">function</span><span class="c4">() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">this</span><span class="c4">.getItems();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">this</span><span class="c4">.getFeeds();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">getFeeds</span><span class="c4">: </span><span class="c0">function</span><span class="c4">() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">this</span><span class="c4">.api(</span><span class="c14">"/rss/feeds/"</span><span class="c4">).then((feeds) =&gt; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">this</span><span class="c4">.feeds = feeds;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">getItems</span><span class="c4">: </span><span class="c0">function</span><span class="c4">() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">this</span><span class="c4">.api(</span><span class="c14">"/rss/items/"</span><span class="c4">).then((items) =&gt; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">this</span><span class="c4">.items = items;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">newFeed</span><span class="c4">: </span><span class="c0">function</span><span class="c4">() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">this</span><span class="c4">.api(</span><span class="c14">"/rss/feeds/"</span><span class="c4">, </span><span class="c14">"POST"</span><span class="c4">, { </span><span class="c0">url</span><span class="c4">: </span><span class="c0">this</span><span class="c4">.newLink }).then(() =&gt; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">this</span><span class="c4">.reload();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">deleteFeed</span><span class="c4">: </span><span class="c0">function</span><span class="c4">(id) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">this</span><span class="c4">.api(</span><span class="c14">"/rss/feeds/"</span><span class="c4">&nbsp;+ id + </span><span class="c14">"/"</span><span class="c4">, </span><span class="c14">"DELETE"</span><span class="c4">).then(() =&gt; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">this</span><span class="c4">.reload();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>});</span></p></td></tr></tbody></table><h3 class="c15" id="h.ighnrfa8dqvd"><span class="c24">Create the SPA template</span></h3><p class="c3"><span>Create new file </span><span class="c8">rss/templates/rss/feeds.html</span><span class="c10">&nbsp;and add the following:</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.1e84e51ac34ff0c7f25b3b9d157fdb56a6adbb51"></a><a id="t.48"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">&lt;</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{% verbatim %}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">v-if</span><span class="c4">=</span><span class="c14">"items.length"</span><span class="c4">&nbsp;</span><span class="c0">v-for</span><span class="c4">=</span><span class="c14">"item in items"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">p</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{ item.published }}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">a</span><span class="c4">&nbsp;</span><span class="c0">v-bind:href</span><span class="c4">=</span><span class="c14">"item.link"</span><span class="c4">&gt;{{ item.title }}&lt;/</span><span class="c0">a</span><span class="c4">&gt; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{ item.author }}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">p</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{% endverbatim %}<br>&lt;/</span><span class="c0">div</span><span class="c4">&gt;</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Notice the </span><span class="c8">verbatim</span><span class="c10">&nbsp;tag used after the opening element. This Django tag allows us to signify that the content within this tag should be sent to the client as-is with no modification by the renderer. This is crucial for applications that use frontend frameworks such as Vue, Handlebars, or any other that has conflicting syntax with Django’s templating engine.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>While we’re at it, let’s go ahead and modify our </span><span class="c8">reader.html</span><span class="c10">&nbsp;file to use our new Vue app and its template.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Modify the </span><span class="c8">body</span><span class="c10">&nbsp;block to match the following:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.248f498a44a4b2643ea0f1c6f56ee49a4d087a8d"></a><a id="t.49"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">{% block body %}<br>&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">id</span><span class="c4">=</span><span class="c14">"rss-app"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">input</span><span class="c4">&nbsp;</span><span class="c0">type</span><span class="c4">=</span><span class="c14">"text"</span><span class="c4">&nbsp;</span><span class="c0">v-model</span><span class="c4">=</span><span class="c14">"newLink"</span><span class="c4">&nbsp;</span><span class="c0">placeholder</span><span class="c4">=</span><span class="c14">"RSS feed URL"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">button</span><span class="c4">&nbsp;@</span><span class="c0">click</span><span class="c4">=</span><span class="c14">"newFeed"</span><span class="c4">&gt;Save&lt;/</span><span class="c0">button</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{% include 'rss/feeds.html' %}<br>&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br><br>{% load static %}<br>&lt;</span><span class="c0">script</span><span class="c4">&nbsp;</span><span class="c0">type</span><span class="c4">=</span><span class="c14">"application/javascript"</span><span class="c4">&nbsp;</span><span class="c0">src</span><span class="c4">=</span><span class="c14">"{% static 'rss/app.js' %}"</span><span class="c4">&gt;&lt;/</span><span class="c0">script</span><span class="c4">&gt;<br>&lt;</span><span class="c0">script</span><span class="c4">&nbsp;</span><span class="c0">type</span><span class="c4">=</span><span class="c14">"application/javascript"</span><span class="c4">&gt;<br></span><span class="c14">window</span><span class="c4">.addEventListener(</span><span class="c14">"load"</span><span class="c4">, </span><span class="c0">function</span><span class="c4">() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rssApp.reload();<br>});<br>&lt;/</span><span class="c0">script</span><span class="c4">&gt;<br>{% endblock %}</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Notice that we’re giving this main </span><span class="c8 c17">div</span><span>&nbsp;tag an id of “rss-app”. This matches the </span><span class="c8 c17">el</span><span class="c10">&nbsp;property of our Vue app. This allows the Vue app to take over the element and allow for dynamic rendering.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>We are also using the </span><span class="c8">include</span><span>&nbsp;tag to add our new template to the markup of </span><span class="c8">readers.html</span><span class="c10">.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Towards the bottom, we use the </span><span class="c8">load static</span><span class="c10">&nbsp;directive to allow for retrieving our static JavaScript file using relative means (as opposed to using an absolute link that may change).</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Finally, we add some inline JavaScript to kickstart our </span><span class="c8">rssApp</span><span class="c10">&nbsp;on page load.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Restarting the server and going to </span><span class="c41"><a class="c12" href="https://www.google.com/url?q=https://localhost:8000/rss/&amp;sa=D&amp;ust=1526076595120000">https://localhost:8000/rss/</a></span><span class="c10">&nbsp;shows our app in a fresh state:</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span style="overflow: hidden; display: inline-block; margin: 0.00px -0.00px; border: 1.33px solid #b7b7b7; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 251.00px; height: 70.00px;"><img alt="" src="./lets-make-an-rss-reader_files/image4.png" style="width: 251.00px; height: 70.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Entering an RSS feed URL and clicking “Save” will result in the following:</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span style="overflow: hidden; display: inline-block; margin: 0.00px -0.00px; border: 1.33px solid #b7b7b7; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 597.00px; height: 101.00px;"><img alt="" src="./lets-make-an-rss-reader_files/image3.png" style="width: 597.00px; height: 101.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c7 c11"><span class="c25 c17"></span></p><p class="c3"><span>As you can see, our tests were correct! We were able to save an RSS feed and pull its items without any hassle.</span></p><h1 class="c36" id="h.nghtnzvl5ypg"><span class="c28">8: Styling the page</span></h1><h2 class="c13" id="h.oi7lwnddf12w"><span class="c22">Include CSS libraries</span></h2><p class="c3"><span class="c10">Let’s include Bootstrap to assist us in quickly making this look nicer.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Modify the </span><span class="c8">base.html</span><span>&nbsp;file and add this line within the </span><span class="c8">head</span><span class="c10">&nbsp;tag:</span></p><p class="c3 c11"><span class="c29 c27"></span></p><a id="t.ac37da25caaed065b726ae228005eb13fb32f9a0"></a><a id="t.50"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">&lt;</span><span class="c0">link</span><span class="c4">&nbsp;</span><span class="c0">rel</span><span class="c4">=</span><span class="c14">"stylesheet"</span><span class="c4">&nbsp;</span><span class="c0">href</span><span class="c4">=</span><span class="c14">"https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css"</span><span class="c4">&gt;</span></p></td></tr></tbody></table><h2 class="c13" id="h.my329kbv45bo"><span class="c22">Using Bootstrap styles</span></h2><p class="c3"><span>Modify the </span><span class="c8">reader.html</span><span class="c10">&nbsp;file and add classes where you see fit. Play around with the styling and find something that you enjoy. For reference, here is mine:</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span class="c17">Note: if you are unfamiliar with Bootstrap, feel free to copy my markup below or familiarize yourself at </span><span class="c41 c17"><a class="c12" href="https://www.google.com/url?q=https://getbootstrap.com/docs/4.0/getting-started/introduction/&amp;sa=D&amp;ust=1526076595124000">https://getbootstrap.com/docs/4.0/getting-started/introduction/</a></span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.87b91ce4af6d64058ca7e25b58f46655144c2057"></a><a id="t.51"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">id</span><span class="c4">=</span><span class="c14">"rss-app"</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"container mt-4"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"row mb-4"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"col-4"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">input</span><span class="c4">&nbsp;</span><span class="c0">type</span><span class="c4">=</span><span class="c14">"text"</span><span class="c4">&nbsp;</span><span class="c0">v-model</span><span class="c4">=</span><span class="c14">"newLink"</span><span class="c4">&nbsp;</span><span class="c0">placeholder</span><span class="c4">=</span><span class="c14">"RSS feed URL"</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"form-control"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"col-2"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">button</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"btn btn-secondary"</span><span class="c4">&nbsp;@</span><span class="c0">click</span><span class="c4">=</span><span class="c14">"newFeed"</span><span class="c4">&gt;Save&lt;/</span><span class="c0">button</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{% include 'rss/feeds.html' %}<br>&lt;/</span><span class="c0">div</span><span class="c4">&gt;</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c29 c27"></span></p><p class="c3"><span>And here is my </span><span class="c8">feeds.html</span><span class="c10">&nbsp;template:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.79d1d95de13046ffca922fa6e6400e9802b5d56b"></a><a id="t.52"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">&lt;</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{% verbatim %}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">v-if</span><span class="c4">=</span><span class="c14">"items.length"</span><span class="c4">&nbsp;</span><span class="c0">v-for</span><span class="c4">=</span><span class="c14">"item in items"</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"row mb-2"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"col"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{ item.published }}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">a</span><span class="c4">&nbsp;</span><span class="c0">v-bind:href</span><span class="c4">=</span><span class="c14">"item.link"</span><span class="c4">&gt;{{ item.title }}&lt;/</span><span class="c0">a</span><span class="c4">&gt; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{ item.author }}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">v-if</span><span class="c4">=</span><span class="c14">"!items.length"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">p</span><span class="c4">&gt;Enter your favorite RSS feed above.&lt;/</span><span class="c0">p</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{% endverbatim %}<br>&lt;/</span><span class="c0">div</span><span class="c4">&gt;</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Refreshing your browser will show you the style changes.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c7"><span style="overflow: hidden; display: inline-block; margin: -0.00px -0.00px; border: 1.33px solid #b7b7b7; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 128.00px;"><img alt="" src="./lets-make-an-rss-reader_files/image5.png" style="width: 624.00px; height: 128.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><h1 class="c36" id="h.k81zg533xasb"><span class="c28">9: Frontend routing</span></h1><p class="c3"><span class="c10">So far our app can save RSS feeds, retrieve links for our consumption, and does it all without so much as a page reload. However, we can’t administrate our content without going into the built-in Django admin panel. It would be nice if we could delete which feeds we’re subscribed to from within our application.</span></p><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Luckily, we’ve already laid the groundwork for this exact functionality.</span></p><h2 class="c13" id="h.mf1dwjjos4ge"><span class="c22">Create a control page template</span></h2><p class="c3"><span>Create new file </span><span class="c8">rss/templates/rss/control.html</span><span class="c10">&nbsp;and add the following:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.42151963d2392b696518b2feaeeb4eae9a4bf660"></a><a id="t.53"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">&lt;</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{% verbatim %}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"row mb-2"</span><span class="c4">&nbsp;</span><span class="c0">v-for</span><span class="c4">=</span><span class="c14">"feed in feeds"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"col"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">a</span><span class="c4">&nbsp;</span><span class="c0">v-bind:href</span><span class="c4">=</span><span class="c14">"feed.url"</span><span class="c4">&gt;{{ feed.url }}&lt;/</span><span class="c0">a</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"col text-right"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">a</span><span class="c4">&nbsp;@</span><span class="c0">click</span><span class="c4">=</span><span class="c14">"deleteFeed(feed.id)"</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"text-danger"</span><span class="c4">&gt;Delete&lt;/</span><span class="c0">a</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{% endverbatim %}<br>&lt;/</span><span class="c0">div</span><span class="c4">&gt;</span></p></td></tr></tbody></table><h2 class="c13" id="h.cv3l8phldsq"><span class="c22">Add some basic routing</span></h2><p class="c3"><span>Open </span><span class="c8">app.js</span><span>&nbsp;and add the following entry to the </span><span class="c8">data</span><span class="c10">&nbsp;map:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.45e0d94e749d61507bae56cba19f031bd46b648f"></a><a id="t.54"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">route: </span><span class="c14">"feeds"</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>In the same file, add the following method to the </span><span class="c8">methods</span><span class="c10">&nbsp;map:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.493438824de6df910422d2efeed9433391858ffc"></a><a id="t.55"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">setRoute: </span><span class="c0">function</span><span class="c4">(route) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">this</span><span class="c4">.route = route;<br>},</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c29 c27"></span></p><p class="c3"><span>It would also be nice if our app could alter the URL and load the appropriate section if a page was to be reloaded. Add a new method, </span><span class="c8">setup</span><span>, to the </span><span class="c8">methods</span><span class="c10">&nbsp;map:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.eeee5b451f163577073c9ab002f1567a8f979327"></a><a id="t.56"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">setup: </span><span class="c0">function</span><span class="c4">() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">var</span><span class="c4">&nbsp;hash = </span><span class="c14">window</span><span class="c4">.location.hash;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">if</span><span class="c4">(hash) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">this</span><span class="c4">.route = hash.slice(</span><span class="c19">1</span><span class="c4">);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="c0">this</span><span class="c4">.reload();<br>},</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span>Now change the inline script within </span><span class="c8">reader.html</span><span class="c10">&nbsp;to match this new pattern:</span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.314f7c40c8fe8db34c86c4e7a696f0cfcf29a4d1"></a><a id="t.57"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">&lt;</span><span class="c0">script</span><span class="c4">&nbsp;</span><span class="c0">type</span><span class="c4">=</span><span class="c14">"application/javascript"</span><span class="c4">&gt;<br></span><span class="c14">window</span><span class="c4">.addEventListener(</span><span class="c14">"load"</span><span class="c4">, </span><span class="c0">function</span><span class="c4">() {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rssApp.setup();<br>});<br>&lt;/</span><span class="c0">script</span><span class="c4">&gt;</span></p></td></tr></tbody></table><h2 class="c13" id="h.acobq3girz00"><span class="c22">Responding to the route</span></h2><p class="c3"><span>Open </span><span class="c8">reader.html</span><span>&nbsp;and modify its content to match the following:</span></p><hr style="page-break-before:always;display:none;"><p></p><p class="c3 c11"><span class="c10"></span></p><p class="c3 c11"><span class="c10"></span></p><a id="t.587526f0c376fcbb8b64b35efa4a21d2d12a723f"></a><a id="t.58"></a><table class="c16"><tbody><tr class="c6"><td class="c23" colspan="1" rowspan="1"><p class="c20"><span class="c4">&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">id</span><span class="c4">=</span><span class="c14">"rss-app"</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"container mt-4"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">ul</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"nav mb-4"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">li</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"nav-item"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">a</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"nav-link"</span><span class="c4">&nbsp;</span><span class="c0">href</span><span class="c4">=</span><span class="c14">"#feeds"</span><span class="c4">&nbsp;@</span><span class="c0">click</span><span class="c4">=</span><span class="c14">"setRoute('feeds')"</span><span class="c4">&gt;Feeds&lt;/</span><span class="c0">a</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">li</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">li</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"nav-item"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">a</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"nav-link"</span><span class="c4">&nbsp;</span><span class="c0">href</span><span class="c4">=</span><span class="c14">"#controls"</span><span class="c4">&nbsp;@</span><span class="c0">click</span><span class="c4">=</span><span class="c14">"setRoute('controls')"</span><span class="c4">&gt;Controls&lt;/</span><span class="c0">a</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">li</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">ul</span><span class="c4">&gt;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"row mb-4"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"col-4"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">input</span><span class="c4">&nbsp;</span><span class="c0">type</span><span class="c4">=</span><span class="c14">"text"</span><span class="c4">&nbsp;</span><span class="c0">v-model</span><span class="c4">=</span><span class="c14">"newLink"</span><span class="c4">&nbsp;</span><span class="c0">placeholder</span><span class="c4">=</span><span class="c14">"RSS feed URL"</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"form-control"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"col-2"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">button</span><span class="c4">&nbsp;</span><span class="c0">class</span><span class="c4">=</span><span class="c14">"btn btn-secondary"</span><span class="c4">&nbsp;@</span><span class="c0">click</span><span class="c4">=</span><span class="c14">"newFeed"</span><span class="c4">&gt;Save&lt;/</span><span class="c0">button</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">v-if</span><span class="c4">=</span><span class="c14">"route == 'controls'"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{% include 'rss/control.html' %}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span class="c0">div</span><span class="c4">&nbsp;</span><span class="c0">v-if</span><span class="c4">=</span><span class="c14">"route == 'feeds'"</span><span class="c4">&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{% include 'rss/feeds.html' %}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/</span><span class="c0">div</span><span class="c4">&gt;<br>&lt;/</span><span class="c0">div</span><span class="c4">&gt;</span></p></td></tr></tbody></table><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Restarting the web server and reloading the page will show our SPA in action!</span></p><hr style="page-break-before:always;display:none;"><h1 class="c36 c47" id="h.ockr81u8zoj9"><span class="c28"></span></h1><h1 class="c36" id="h.p5dk6ns45jjg"><span class="c28">10: Exercises</span></h1><p class="c3 c11"><span class="c10"></span></p><p class="c3"><span class="c10">Here are a few exercises that should go a long way in terms of making it your own:</span></p><h2 class="c13" id="h.w56s677posu1"><span class="c22">Easy</span></h2><ol class="c21 lst-kix_pzbcxock989b-0 start" start="1"><li class="c3 c34"><span class="c10">Use the bootstrap library to modernize the look and feel</span></li></ol><ol class="c21 lst-kix_pzbcxock989b-1 start" start="1"><li class="c3 c9"><span>Example: Use the </span><span class="c8">card</span><span class="c10">&nbsp;classes for each article</span></li><li class="c3 c9"><span class="c10">Example: Use the typography and color classes to switch things up</span></li></ol><ol class="c21 lst-kix_pzbcxock989b-0" start="2"><li class="c3 c34"><span>Display the </span><span class="c8">summary</span><span class="c10">&nbsp;attribute of each item to allow for quick sampling of the article</span></li></ol><h2 class="c13" id="h.4y4p8j4rrlh5"><span class="c22">Medium</span></h2><ol class="c21 lst-kix_sp0v8pxmx32z-0 start" start="1"><li class="c3 c34"><span>Use the </span><span class="c8">published_parsed</span><span class="c10">&nbsp;attribute of each item to display a nicer, cleaner date within the template</span></li><li class="c3 c34"><span class="c10">Add a search feature that allows the user to search the retrieved items for keywords</span></li></ol><h2 class="c13" id="h.9t9w4z2c3144"><span class="c22">Hard</span></h2><ol class="c21 lst-kix_eacvnmgkbyni-0 start" start="1"><li class="c3 c34"><span>Extend the </span><span class="c8">controls</span><span>&nbsp;and the </span><span class="c8">rssApp</span><span class="c10">&nbsp;object to allow for modifying existing Feeds</span></li></ol><ol class="c21 lst-kix_eacvnmgkbyni-1 start" start="1"><li class="c3 c9"><span class="c10">Example: Allow the user to update the URL of a Feed they’ve saved</span></li></ol><ol class="c21 lst-kix_eacvnmgkbyni-0" start="2"><li class="c3 c34"><span>Add properties to the </span><span class="c8">Feed</span><span class="c10">&nbsp;Model allowing for advanced sorting, storing, and display</span></li></ol><ol class="c21 lst-kix_eacvnmgkbyni-1 start" start="1"><li class="c3 c9"><span>Example: Allow the user to give each feed a </span><span class="c8">tag</span><span class="c10">&nbsp;that they can sort by</span></li></ol><ol class="c21 lst-kix_eacvnmgkbyni-0" start="3"><li class="c3 c34"><span>Create a new Model, </span><span class="c8">Omission</span><span class="c10">, with matching views and functionality within the Vue app that allows a user to “omit” an article from displaying</span></li></ol><ol class="c21 lst-kix_eacvnmgkbyni-1 start" start="1"><li class="c3 c9"><span>Explanation: Each item has a button that you can click if you don’t want to see a certain article ever again. Once clicked, the item is stored as an </span><span class="c8">Omission</span><span class="c10">&nbsp;which the views check against when fetching items from your feeds.</span></li></ol><h2 class="c13" id="h.aa5cosi2hhl9"><span class="c22">Legendary</span></h2><ol class="c21 lst-kix_imugtofty16d-0 start" start="1"><li class="c3 c34"><span class="c10">Build a recommendations engine that allows you to upvote/downvote items, stores them as their own dedicated Model, and uses them for scoring current items within a “recommendations” endpoint/page of the app.</span></li></ol><ol class="c21 lst-kix_imugtofty16d-1 start" start="1"><li class="c3 c9"><span class="c17">Note: if you complete this one, please send a GitHub link to </span><span class="c41 c17"><a class="c12" href="mailto:kinman@utan.io">kinman@utan.io</a></span><span class="c17">. I will honor you accordingly.</span></li></ol></body></html>